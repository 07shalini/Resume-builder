{"ast":null,"code":"var _jsxFileName = \"/Users/princevishal/Desktop/Chatbot/client/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    type: \"bot\",\n    text: \"Hello! I'll help you create your ATS-friendly resume. What is your full name?\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [currentStep, setCurrentStep] = useState(\"name\");\n  const [isComplete, setIsComplete] = useState(false);\n  const [showAtsPrompt, setShowAtsPrompt] = useState(false);\n  const [atsScore, setAtsScore] = useState(null);\n  const [userData, setUserData] = useState({\n    personalInfo: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      location: \"\",\n      linkedin: \"\",\n      portfolio: \"\"\n    },\n    summary: \"\",\n    skills: {\n      technical: [],\n      soft: []\n    },\n    experience: [],\n    education: [],\n    projects: [],\n    certifications: [],\n    awards: [],\n    languages: [],\n    hobbies: []\n  });\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Add user message\n    setMessages(prev => [...prev, {\n      type: \"user\",\n      text: input\n    }]);\n    try {\n      const response = await fetch(\"http://localhost:3001/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input,\n          step: currentStep\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        setMessages(prev => [...prev, {\n          type: \"bot\",\n          text: \"Sorry, something went wrong. Please try again.\"\n        }]);\n        return;\n      }\n\n      // Update user data based on current step\n      setUserData(prev => {\n        const newUserData = {\n          ...prev\n        };\n        switch (currentStep) {\n          case \"name\":\n            newUserData.personalInfo.name = input;\n            break;\n          case \"email\":\n            newUserData.personalInfo.email = input;\n            break;\n          case \"phone\":\n            newUserData.personalInfo.phone = input;\n            break;\n          case \"location\":\n            newUserData.personalInfo.location = input;\n            break;\n          case \"linkedin\":\n            newUserData.personalInfo.linkedin = input;\n            break;\n          case \"portfolio\":\n            newUserData.personalInfo.portfolio = input;\n            break;\n          case \"summary\":\n            newUserData.summary = input;\n            break;\n          case \"technical_skills\":\n            newUserData.skills.technical = input.split(\",\").map(skill => skill.trim());\n            break;\n          case \"soft_skills\":\n            newUserData.skills.soft = input.split(\",\").map(skill => skill.trim());\n            break;\n          case \"job_title\":\n            newUserData.experience.push({\n              title: input\n            });\n            break;\n          case \"company_name\":\n            newUserData.experience[newUserData.experience.length - 1].company = input;\n            break;\n          case \"job_location\":\n            newUserData.experience[newUserData.experience.length - 1].location = input;\n            break;\n          case \"job_start_date\":\n            newUserData.experience[newUserData.experience.length - 1].startDate = input;\n            break;\n          case \"job_end_date\":\n            newUserData.experience[newUserData.experience.length - 1].endDate = input;\n            break;\n          case \"job_responsibilities\":\n            newUserData.experience[newUserData.experience.length - 1].responsibilities = input.split(\"\\n\");\n            break;\n          case \"degree\":\n            newUserData.education.push({\n              degree: input\n            });\n            break;\n          case \"university\":\n            newUserData.education[newUserData.education.length - 1].university = input;\n            break;\n          case \"education_location\":\n            newUserData.education[newUserData.education.length - 1].location = input;\n            break;\n          case \"education_start_date\":\n            newUserData.education[newUserData.education.length - 1].startDate = input;\n            break;\n          case \"education_end_date\":\n            newUserData.education[newUserData.education.length - 1].endDate = input;\n            break;\n          case \"education_score\":\n            newUserData.education[newUserData.education.length - 1].score = input;\n            break;\n          case \"project_title\":\n            newUserData.projects.push({\n              title: input\n            });\n            break;\n          case \"project_technologies\":\n            newUserData.projects[newUserData.projects.length - 1].technologies = input.split(\",\").map(tech => tech.trim());\n            break;\n          case \"project_description\":\n            newUserData.projects[newUserData.projects.length - 1].description = input;\n            break;\n          case \"project_url\":\n            newUserData.projects[newUserData.projects.length - 1].url = input;\n            break;\n          case \"certificate_name\":\n            newUserData.certifications.push({\n              name: input\n            });\n            break;\n          case \"certificate_platform\":\n            newUserData.certifications[newUserData.certifications.length - 1].platform = input;\n            break;\n          case \"certificate_date\":\n            newUserData.certifications[newUserData.certifications.length - 1].date = input;\n            break;\n          case \"language_name\":\n            newUserData.languages.push({\n              name: input\n            });\n            break;\n          case \"language_proficiency\":\n            newUserData.languages[newUserData.languages.length - 1].proficiency = input;\n            break;\n          case \"hobbies\":\n            newUserData.hobbies = input.split(\",\").map(hobby => hobby.trim());\n            break;\n          default:\n            break;\n        }\n        return newUserData;\n      });\n\n      // Add bot response\n      setMessages(prev => [...prev, {\n        type: \"bot\",\n        text: data.nextQuestion\n      }]);\n\n      // Handle completion\n      if (data.isComplete) {\n        setIsComplete(true);\n        navigate(\"/resume-preview\", {\n          state: {\n            resumeData: userData\n          }\n        });\n      } else {\n        // Handle yes/no responses for adding more items\n        if (input.toLowerCase() === \"yes\" || input.toLowerCase() === \"no\") {\n          switch (currentStep) {\n            case \"add_experience\":\n              setCurrentStep(input.toLowerCase() === \"yes\" ? \"job_title\" : \"degree\");\n              break;\n            case \"add_education\":\n              setCurrentStep(input.toLowerCase() === \"yes\" ? \"degree\" : \"project_title\");\n              break;\n            case \"add_project\":\n              setCurrentStep(input.toLowerCase() === \"yes\" ? \"project_title\" : \"certificate_name\");\n              break;\n            case \"add_certification\":\n              setCurrentStep(input.toLowerCase() === \"yes\" ? \"certificate_name\" : \"language_name\");\n              break;\n            case \"add_language\":\n              setCurrentStep(input.toLowerCase() === \"yes\" ? \"language_name\" : \"hobbies\");\n              break;\n            default:\n              setCurrentStep(data.nextStep || currentStep);\n          }\n        } else {\n          // Handle regular steps\n          const steps = [\"name\", \"email\", \"phone\", \"location\", \"linkedin\", \"portfolio\", \"summary\", \"technical_skills\", \"soft_skills\", \"job_title\", \"company_name\", \"job_location\", \"job_start_date\", \"job_end_date\", \"job_responsibilities\", \"add_experience\", \"degree\", \"university\", \"education_location\", \"education_start_date\", \"education_end_date\", \"education_score\", \"add_education\", \"project_title\", \"project_technologies\", \"project_description\", \"project_url\", \"add_project\", \"certificate_name\", \"certificate_platform\", \"certificate_date\", \"add_certification\", \"language_name\", \"language_proficiency\", \"add_language\", \"hobbies\"];\n          const currentIndex = steps.indexOf(currentStep);\n          setCurrentStep(steps[currentIndex + 1]);\n        }\n      }\n      setInput(\"\");\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages(prev => [...prev, {\n        type: \"bot\",\n        text: \"Sorry, something went wrong. Please try again.\"\n      }]);\n    }\n  };\n  const handleGenerateResume = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/generate-resume\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      });\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = `${userData.personalInfo.name.replace(/\\s+/g, \"_\")}_Resume.pdf`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n\n        // Show ATS prompt after resume generation\n        setShowAtsPrompt(true);\n        setMessages(prev => [...prev, {\n          type: \"bot\",\n          text: \"Would you like to check how well your resume matches a specific job description? Paste the job description below.\"\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          type: \"bot\",\n          text: \"Sorry, there was an error generating your resume.\"\n        }]);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages(prev => [...prev, {\n        type: \"bot\",\n        text: \"Sorry, there was an error generating your resume.\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), isComplete ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"generate-button\",\n        onClick: handleGenerateResume,\n        children: \"Generate Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: handleInputChange,\n          placeholder: \"Type your answer...\",\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"+63UCSBvhmD5QXfdTaOTq7pWzq4=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","type","text","input","setInput","currentStep","setCurrentStep","isComplete","setIsComplete","showAtsPrompt","setShowAtsPrompt","atsScore","setAtsScore","userData","setUserData","personalInfo","name","email","phone","location","linkedin","portfolio","summary","skills","technical","soft","experience","education","projects","certifications","awards","languages","hobbies","messagesEndRef","navigate","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleInputChange","e","target","value","handleSubmit","preventDefault","trim","prev","response","fetch","method","headers","body","JSON","stringify","message","step","data","json","error","newUserData","split","map","skill","push","title","length","company","startDate","endDate","responsibilities","degree","university","score","technologies","tech","description","url","platform","date","proficiency","hobby","nextQuestion","state","resumeData","toLowerCase","nextStep","steps","currentIndex","indexOf","console","handleGenerateResume","ok","blob","window","URL","createObjectURL","a","document","createElement","href","download","replace","appendChild","click","revokeObjectURL","removeChild","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","onSubmit","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/princevishal/Desktop/Chatbot/client/src/components/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Chat.css\";\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([\n    {\n      type: \"bot\",\n      text: \"Hello! I'll help you create your ATS-friendly resume. What is your full name?\",\n    },\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [currentStep, setCurrentStep] = useState(\"name\");\n  const [isComplete, setIsComplete] = useState(false);\n  const [showAtsPrompt, setShowAtsPrompt] = useState(false);\n  const [atsScore, setAtsScore] = useState(null);\n  const [userData, setUserData] = useState({\n    personalInfo: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      location: \"\",\n      linkedin: \"\",\n      portfolio: \"\",\n    },\n    summary: \"\",\n    skills: {\n      technical: [],\n      soft: [],\n    },\n    experience: [],\n    education: [],\n    projects: [],\n    certifications: [],\n    awards: [],\n    languages: [],\n    hobbies: [],\n  });\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Add user message\n    setMessages((prev) => [...prev, { type: \"user\", text: input }]);\n\n    try {\n      const response = await fetch(\"http://localhost:3001/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message: input,\n          step: currentStep,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.error) {\n        setMessages((prev) => [\n          ...prev,\n          {\n            type: \"bot\",\n            text: \"Sorry, something went wrong. Please try again.\",\n          },\n        ]);\n        return;\n      }\n\n      // Update user data based on current step\n      setUserData((prev) => {\n        const newUserData = { ...prev };\n        switch (currentStep) {\n          case \"name\":\n            newUserData.personalInfo.name = input;\n            break;\n          case \"email\":\n            newUserData.personalInfo.email = input;\n            break;\n          case \"phone\":\n            newUserData.personalInfo.phone = input;\n            break;\n          case \"location\":\n            newUserData.personalInfo.location = input;\n            break;\n          case \"linkedin\":\n            newUserData.personalInfo.linkedin = input;\n            break;\n          case \"portfolio\":\n            newUserData.personalInfo.portfolio = input;\n            break;\n          case \"summary\":\n            newUserData.summary = input;\n            break;\n          case \"technical_skills\":\n            newUserData.skills.technical = input\n              .split(\",\")\n              .map((skill) => skill.trim());\n            break;\n          case \"soft_skills\":\n            newUserData.skills.soft = input\n              .split(\",\")\n              .map((skill) => skill.trim());\n            break;\n          case \"job_title\":\n            newUserData.experience.push({ title: input });\n            break;\n          case \"company_name\":\n            newUserData.experience[newUserData.experience.length - 1].company =\n              input;\n            break;\n          case \"job_location\":\n            newUserData.experience[newUserData.experience.length - 1].location =\n              input;\n            break;\n          case \"job_start_date\":\n            newUserData.experience[\n              newUserData.experience.length - 1\n            ].startDate = input;\n            break;\n          case \"job_end_date\":\n            newUserData.experience[newUserData.experience.length - 1].endDate =\n              input;\n            break;\n          case \"job_responsibilities\":\n            newUserData.experience[\n              newUserData.experience.length - 1\n            ].responsibilities = input.split(\"\\n\");\n            break;\n          case \"degree\":\n            newUserData.education.push({ degree: input });\n            break;\n          case \"university\":\n            newUserData.education[newUserData.education.length - 1].university =\n              input;\n            break;\n          case \"education_location\":\n            newUserData.education[newUserData.education.length - 1].location =\n              input;\n            break;\n          case \"education_start_date\":\n            newUserData.education[newUserData.education.length - 1].startDate =\n              input;\n            break;\n          case \"education_end_date\":\n            newUserData.education[newUserData.education.length - 1].endDate =\n              input;\n            break;\n          case \"education_score\":\n            newUserData.education[newUserData.education.length - 1].score =\n              input;\n            break;\n          case \"project_title\":\n            newUserData.projects.push({ title: input });\n            break;\n          case \"project_technologies\":\n            newUserData.projects[newUserData.projects.length - 1].technologies =\n              input.split(\",\").map((tech) => tech.trim());\n            break;\n          case \"project_description\":\n            newUserData.projects[newUserData.projects.length - 1].description =\n              input;\n            break;\n          case \"project_url\":\n            newUserData.projects[newUserData.projects.length - 1].url = input;\n            break;\n          case \"certificate_name\":\n            newUserData.certifications.push({ name: input });\n            break;\n          case \"certificate_platform\":\n            newUserData.certifications[\n              newUserData.certifications.length - 1\n            ].platform = input;\n            break;\n          case \"certificate_date\":\n            newUserData.certifications[\n              newUserData.certifications.length - 1\n            ].date = input;\n            break;\n          case \"language_name\":\n            newUserData.languages.push({ name: input });\n            break;\n          case \"language_proficiency\":\n            newUserData.languages[\n              newUserData.languages.length - 1\n            ].proficiency = input;\n            break;\n          case \"hobbies\":\n            newUserData.hobbies = input.split(\",\").map((hobby) => hobby.trim());\n            break;\n          default:\n            break;\n        }\n        return newUserData;\n      });\n\n      // Add bot response\n      setMessages((prev) => [\n        ...prev,\n        { type: \"bot\", text: data.nextQuestion },\n      ]);\n\n      // Handle completion\n      if (data.isComplete) {\n        setIsComplete(true);\n        navigate(\"/resume-preview\", { state: { resumeData: userData } });\n      } else {\n        // Handle yes/no responses for adding more items\n        if (input.toLowerCase() === \"yes\" || input.toLowerCase() === \"no\") {\n          switch (currentStep) {\n            case \"add_experience\":\n              setCurrentStep(\n                input.toLowerCase() === \"yes\" ? \"job_title\" : \"degree\"\n              );\n              break;\n            case \"add_education\":\n              setCurrentStep(\n                input.toLowerCase() === \"yes\" ? \"degree\" : \"project_title\"\n              );\n              break;\n            case \"add_project\":\n              setCurrentStep(\n                input.toLowerCase() === \"yes\"\n                  ? \"project_title\"\n                  : \"certificate_name\"\n              );\n              break;\n            case \"add_certification\":\n              setCurrentStep(\n                input.toLowerCase() === \"yes\"\n                  ? \"certificate_name\"\n                  : \"language_name\"\n              );\n              break;\n            case \"add_language\":\n              setCurrentStep(\n                input.toLowerCase() === \"yes\" ? \"language_name\" : \"hobbies\"\n              );\n              break;\n            default:\n              setCurrentStep(data.nextStep || currentStep);\n          }\n        } else {\n          // Handle regular steps\n          const steps = [\n            \"name\",\n            \"email\",\n            \"phone\",\n            \"location\",\n            \"linkedin\",\n            \"portfolio\",\n            \"summary\",\n            \"technical_skills\",\n            \"soft_skills\",\n            \"job_title\",\n            \"company_name\",\n            \"job_location\",\n            \"job_start_date\",\n            \"job_end_date\",\n            \"job_responsibilities\",\n            \"add_experience\",\n            \"degree\",\n            \"university\",\n            \"education_location\",\n            \"education_start_date\",\n            \"education_end_date\",\n            \"education_score\",\n            \"add_education\",\n            \"project_title\",\n            \"project_technologies\",\n            \"project_description\",\n            \"project_url\",\n            \"add_project\",\n            \"certificate_name\",\n            \"certificate_platform\",\n            \"certificate_date\",\n            \"add_certification\",\n            \"language_name\",\n            \"language_proficiency\",\n            \"add_language\",\n            \"hobbies\",\n          ];\n          const currentIndex = steps.indexOf(currentStep);\n          setCurrentStep(steps[currentIndex + 1]);\n        }\n      }\n\n      setInput(\"\");\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages((prev) => [\n        ...prev,\n        { type: \"bot\", text: \"Sorry, something went wrong. Please try again.\" },\n      ]);\n    }\n  };\n\n  const handleGenerateResume = async () => {\n    try {\n      const response = await fetch(\n        \"http://localhost:3001/api/generate-resume\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(userData),\n        }\n      );\n\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = `${userData.personalInfo.name.replace(\n          /\\s+/g,\n          \"_\"\n        )}_Resume.pdf`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n\n        // Show ATS prompt after resume generation\n        setShowAtsPrompt(true);\n        setMessages((prev) => [\n          ...prev,\n          {\n            type: \"bot\",\n            text: \"Would you like to check how well your resume matches a specific job description? Paste the job description below.\",\n          },\n        ]);\n      } else {\n        setMessages((prev) => [\n          ...prev,\n          {\n            type: \"bot\",\n            text: \"Sorry, there was an error generating your resume.\",\n          },\n        ]);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages((prev) => [\n        ...prev,\n        {\n          type: \"bot\",\n          text: \"Sorry, there was an error generating your resume.\",\n        },\n      ]);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"messages\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.type}`}>\n            <div className=\"message-content\">{message.text}</div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      {isComplete ? (\n        <div className=\"button-container\">\n          <button className=\"generate-button\" onClick={handleGenerateResume}>\n            Generate Resume\n          </button>\n        </div>\n      ) : (\n        <form onSubmit={handleSubmit} className=\"input-form\">\n          <div className=\"input-container\">\n            <input\n              type=\"text\"\n              value={input}\n              onChange={handleInputChange}\n              placeholder=\"Type your answer...\"\n              className=\"chat-input\"\n            />\n          </div>\n          <button type=\"submit\" className=\"send-button\">\n            Send\n          </button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
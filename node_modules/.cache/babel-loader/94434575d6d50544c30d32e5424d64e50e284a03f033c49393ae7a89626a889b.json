{"ast":null,"code":"// Simple dictionary of common words\nconst dictionary = new Set([\"a\", \"an\", \"and\", \"are\", \"as\", \"at\", \"be\", \"by\", \"for\", \"from\", \"has\", \"he\", \"in\", \"is\", \"it\", \"its\", \"of\", \"on\", \"that\", \"the\", \"to\", \"was\", \"were\", \"will\", \"with\", \"the\", \"this\", \"but\", \"they\", \"have\", \"had\", \"what\", \"when\", \"where\", \"who\", \"which\", \"why\", \"how\", \"all\", \"any\", \"both\", \"each\", \"few\", \"more\", \"most\", \"other\", \"some\", \"such\", \"than\", \"too\", \"very\", \"can\", \"will\", \"just\", \"should\", \"now\", \"name\", \"email\", \"skills\", \"experience\", \"education\", \"resume\", \"job\", \"work\", \"company\", \"position\", \"role\", \"responsibilities\", \"achievements\", \"projects\", \"team\", \"lead\", \"manage\", \"develop\", \"create\", \"implement\", \"design\", \"build\", \"test\", \"deploy\", \"maintain\", \"support\", \"analyze\", \"solve\", \"improve\", \"optimize\", \"collaborate\", \"communicate\", \"present\", \"document\", \"train\", \"mentor\", \"coach\", \"guide\", \"help\", \"assist\", \"support\", \"serve\", \"provide\", \"deliver\", \"produce\", \"generate\", \"create\", \"develop\", \"design\", \"build\", \"implement\", \"execute\", \"perform\", \"conduct\", \"carry\", \"out\", \"complete\", \"finish\", \"achieve\", \"accomplish\", \"attain\", \"reach\", \"meet\", \"exceed\", \"surpass\", \"outperform\", \"excel\", \"shine\", \"stand\", \"out\", \"distinguish\", \"differentiate\", \"innovate\", \"pioneer\", \"lead\", \"guide\", \"direct\", \"manage\", \"supervise\", \"oversee\", \"coordinate\", \"organize\", \"plan\", \"schedule\", \"budget\", \"forecast\", \"estimate\", \"calculate\", \"measure\", \"track\", \"monitor\", \"evaluate\", \"assess\", \"analyze\", \"review\", \"examine\", \"investigate\", \"research\", \"study\", \"learn\", \"understand\", \"comprehend\", \"grasp\", \"master\", \"expert\", \"specialist\", \"professional\", \"skilled\", \"talented\", \"gifted\", \"proficient\", \"competent\", \"capable\", \"able\", \"qualified\", \"certified\", \"licensed\", \"accredited\", \"authorized\", \"approved\", \"validated\", \"verified\", \"confirmed\", \"established\", \"proven\", \"demonstrated\", \"shown\", \"exhibited\", \"displayed\", \"presented\", \"shared\", \"communicated\", \"conveyed\", \"expressed\", \"articulated\", \"stated\", \"declared\", \"announced\", \"reported\", \"documented\", \"recorded\", \"logged\", \"tracked\", \"monitored\", \"measured\", \"evaluated\", \"assessed\", \"analyzed\", \"reviewed\", \"examined\", \"investigated\", \"researched\", \"studied\", \"learned\", \"understood\", \"comprehended\", \"grasped\", \"mastered\"]);\nexport const checkSpelling = text => {\n  if (!text) return {\n    hasErrors: false,\n    errors: []\n  };\n  const words = text.split(/\\s+/);\n  const errors = [];\n  words.forEach(word => {\n    // Remove punctuation and convert to lowercase for checking\n    const cleanWord = word.replace(/[.,/#!$%^&*;:{}=\\-_`~()]/g, \"\").toLowerCase();\n\n    // Skip empty strings, numbers, and words in dictionary\n    if (!cleanWord || /^\\d+$/.test(cleanWord) || dictionary.has(cleanWord)) return;\n\n    // Generate some simple suggestions\n    const suggestions = [cleanWord + \"ing\", cleanWord + \"ed\", cleanWord + \"s\", cleanWord.replace(/(.)\\1+/g, \"$1\"),\n    // Remove repeated letters\n    cleanWord.replace(/[aeiou]/g, \"a\") // Replace vowels with 'a'\n    ].filter(s => s !== cleanWord);\n    errors.push({\n      word,\n      suggestions: suggestions.slice(0, 3) // Get top 3 suggestions\n    });\n  });\n  return {\n    hasErrors: errors.length > 0,\n    errors\n  };\n};\nexport const getHighlightedText = (text, errors) => {\n  if (!errors || errors.length === 0) return text;\n  let highlightedText = text;\n  errors.forEach(({\n    word\n  }) => {\n    const regex = new RegExp(`\\\\b${word}\\\\b`, \"gi\");\n    highlightedText = highlightedText.replace(regex, `<span class=\"spelling-error\" data-word=\"${word}\">${word}</span>`);\n  });\n  return highlightedText;\n};","map":{"version":3,"names":["dictionary","Set","checkSpelling","text","hasErrors","errors","words","split","forEach","word","cleanWord","replace","toLowerCase","test","has","suggestions","filter","s","push","slice","length","getHighlightedText","highlightedText","regex","RegExp"],"sources":["/Users/princevishal/Desktop/Chatbot/client/src/utils/spellChecker.js"],"sourcesContent":["// Simple dictionary of common words\nconst dictionary = new Set([\n  \"a\",\n  \"an\",\n  \"and\",\n  \"are\",\n  \"as\",\n  \"at\",\n  \"be\",\n  \"by\",\n  \"for\",\n  \"from\",\n  \"has\",\n  \"he\",\n  \"in\",\n  \"is\",\n  \"it\",\n  \"its\",\n  \"of\",\n  \"on\",\n  \"that\",\n  \"the\",\n  \"to\",\n  \"was\",\n  \"were\",\n  \"will\",\n  \"with\",\n  \"the\",\n  \"this\",\n  \"but\",\n  \"they\",\n  \"have\",\n  \"had\",\n  \"what\",\n  \"when\",\n  \"where\",\n  \"who\",\n  \"which\",\n  \"why\",\n  \"how\",\n  \"all\",\n  \"any\",\n  \"both\",\n  \"each\",\n  \"few\",\n  \"more\",\n  \"most\",\n  \"other\",\n  \"some\",\n  \"such\",\n  \"than\",\n  \"too\",\n  \"very\",\n  \"can\",\n  \"will\",\n  \"just\",\n  \"should\",\n  \"now\",\n  \"name\",\n  \"email\",\n  \"skills\",\n  \"experience\",\n  \"education\",\n  \"resume\",\n  \"job\",\n  \"work\",\n  \"company\",\n  \"position\",\n  \"role\",\n  \"responsibilities\",\n  \"achievements\",\n  \"projects\",\n  \"team\",\n  \"lead\",\n  \"manage\",\n  \"develop\",\n  \"create\",\n  \"implement\",\n  \"design\",\n  \"build\",\n  \"test\",\n  \"deploy\",\n  \"maintain\",\n  \"support\",\n  \"analyze\",\n  \"solve\",\n  \"improve\",\n  \"optimize\",\n  \"collaborate\",\n  \"communicate\",\n  \"present\",\n  \"document\",\n  \"train\",\n  \"mentor\",\n  \"coach\",\n  \"guide\",\n  \"help\",\n  \"assist\",\n  \"support\",\n  \"serve\",\n  \"provide\",\n  \"deliver\",\n  \"produce\",\n  \"generate\",\n  \"create\",\n  \"develop\",\n  \"design\",\n  \"build\",\n  \"implement\",\n  \"execute\",\n  \"perform\",\n  \"conduct\",\n  \"carry\",\n  \"out\",\n  \"complete\",\n  \"finish\",\n  \"achieve\",\n  \"accomplish\",\n  \"attain\",\n  \"reach\",\n  \"meet\",\n  \"exceed\",\n  \"surpass\",\n  \"outperform\",\n  \"excel\",\n  \"shine\",\n  \"stand\",\n  \"out\",\n  \"distinguish\",\n  \"differentiate\",\n  \"innovate\",\n  \"pioneer\",\n  \"lead\",\n  \"guide\",\n  \"direct\",\n  \"manage\",\n  \"supervise\",\n  \"oversee\",\n  \"coordinate\",\n  \"organize\",\n  \"plan\",\n  \"schedule\",\n  \"budget\",\n  \"forecast\",\n  \"estimate\",\n  \"calculate\",\n  \"measure\",\n  \"track\",\n  \"monitor\",\n  \"evaluate\",\n  \"assess\",\n  \"analyze\",\n  \"review\",\n  \"examine\",\n  \"investigate\",\n  \"research\",\n  \"study\",\n  \"learn\",\n  \"understand\",\n  \"comprehend\",\n  \"grasp\",\n  \"master\",\n  \"expert\",\n  \"specialist\",\n  \"professional\",\n  \"skilled\",\n  \"talented\",\n  \"gifted\",\n  \"proficient\",\n  \"competent\",\n  \"capable\",\n  \"able\",\n  \"qualified\",\n  \"certified\",\n  \"licensed\",\n  \"accredited\",\n  \"authorized\",\n  \"approved\",\n  \"validated\",\n  \"verified\",\n  \"confirmed\",\n  \"established\",\n  \"proven\",\n  \"demonstrated\",\n  \"shown\",\n  \"exhibited\",\n  \"displayed\",\n  \"presented\",\n  \"shared\",\n  \"communicated\",\n  \"conveyed\",\n  \"expressed\",\n  \"articulated\",\n  \"stated\",\n  \"declared\",\n  \"announced\",\n  \"reported\",\n  \"documented\",\n  \"recorded\",\n  \"logged\",\n  \"tracked\",\n  \"monitored\",\n  \"measured\",\n  \"evaluated\",\n  \"assessed\",\n  \"analyzed\",\n  \"reviewed\",\n  \"examined\",\n  \"investigated\",\n  \"researched\",\n  \"studied\",\n  \"learned\",\n  \"understood\",\n  \"comprehended\",\n  \"grasped\",\n  \"mastered\",\n]);\n\nexport const checkSpelling = (text) => {\n  if (!text) return { hasErrors: false, errors: [] };\n\n  const words = text.split(/\\s+/);\n  const errors = [];\n\n  words.forEach((word) => {\n    // Remove punctuation and convert to lowercase for checking\n    const cleanWord = word\n      .replace(/[.,/#!$%^&*;:{}=\\-_`~()]/g, \"\")\n      .toLowerCase();\n\n    // Skip empty strings, numbers, and words in dictionary\n    if (!cleanWord || /^\\d+$/.test(cleanWord) || dictionary.has(cleanWord))\n      return;\n\n    // Generate some simple suggestions\n    const suggestions = [\n      cleanWord + \"ing\",\n      cleanWord + \"ed\",\n      cleanWord + \"s\",\n      cleanWord.replace(/(.)\\1+/g, \"$1\"), // Remove repeated letters\n      cleanWord.replace(/[aeiou]/g, \"a\"), // Replace vowels with 'a'\n    ].filter((s) => s !== cleanWord);\n\n    errors.push({\n      word,\n      suggestions: suggestions.slice(0, 3), // Get top 3 suggestions\n    });\n  });\n\n  return {\n    hasErrors: errors.length > 0,\n    errors,\n  };\n};\n\nexport const getHighlightedText = (text, errors) => {\n  if (!errors || errors.length === 0) return text;\n\n  let highlightedText = text;\n  errors.forEach(({ word }) => {\n    const regex = new RegExp(`\\\\b${word}\\\\b`, \"gi\");\n    highlightedText = highlightedText.replace(\n      regex,\n      `<span class=\"spelling-error\" data-word=\"${word}\">${word}</span>`\n    );\n  });\n\n  return highlightedText;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
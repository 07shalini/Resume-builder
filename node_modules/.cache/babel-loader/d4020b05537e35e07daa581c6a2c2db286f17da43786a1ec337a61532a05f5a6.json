{"ast":null,"code":"var _jsxFileName = \"/Users/princevishal/Desktop/Chatbot/client/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    type: \"bot\",\n    text: \"Hello! I'll help you create your ATS-friendly resume. What is your full name?\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [currentStep, setCurrentStep] = useState(\"name\");\n  const [isComplete, setIsComplete] = useState(false);\n  const [userData, setUserData] = useState({});\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Add user message\n    setMessages(prev => [...prev, {\n      type: \"user\",\n      text: input\n    }]);\n    try {\n      const response = await fetch(\"http://localhost:3001/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input,\n          step: currentStep\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        setMessages(prev => [...prev, {\n          type: \"bot\",\n          text: \"Sorry, something went wrong. Please try again.\"\n        }]);\n        return;\n      }\n\n      // Store user data\n      const newUserData = {\n        ...userData\n      };\n      switch (currentStep) {\n        case \"name\":\n          newUserData.personalInfo = {\n            ...newUserData.personalInfo,\n            name: input\n          };\n          break;\n        case \"email\":\n          newUserData.personalInfo = {\n            ...newUserData.personalInfo,\n            email: input\n          };\n          break;\n        case \"phone\":\n          newUserData.personalInfo = {\n            ...newUserData.personalInfo,\n            phone: input\n          };\n          break;\n        case \"location\":\n          newUserData.personalInfo = {\n            ...newUserData.personalInfo,\n            location: input\n          };\n          break;\n        case \"linkedin\":\n          newUserData.personalInfo = {\n            ...newUserData.personalInfo,\n            linkedin: input\n          };\n          break;\n        case \"portfolio\":\n          newUserData.personalInfo = {\n            ...newUserData.personalInfo,\n            portfolio: input\n          };\n          break;\n        case \"summary\":\n          newUserData.summary = input;\n          break;\n        case \"technicalSkills\":\n          newUserData.skills = {\n            ...newUserData.skills,\n            technical: input.split(\",\").map(skill => skill.trim())\n          };\n          break;\n        case \"softSkills\":\n          newUserData.skills = {\n            ...newUserData.skills,\n            soft: input.split(\",\").map(skill => skill.trim())\n          };\n          break;\n        case \"jobTitle\":\n          newUserData.currentExperience = {\n            title: input\n          };\n          break;\n        case \"company\":\n          newUserData.currentExperience = {\n            ...newUserData.currentExperience,\n            company: input\n          };\n          break;\n        case \"jobLocation\":\n          newUserData.currentExperience = {\n            ...newUserData.currentExperience,\n            location: input\n          };\n          break;\n        case \"jobStartDate\":\n          newUserData.currentExperience = {\n            ...newUserData.currentExperience,\n            startDate: input\n          };\n          break;\n        case \"jobEndDate\":\n          newUserData.currentExperience = {\n            ...newUserData.currentExperience,\n            endDate: input\n          };\n          break;\n        case \"jobResponsibilities\":\n          newUserData.currentExperience = {\n            ...newUserData.currentExperience,\n            responsibilities: input.split(\"\\n\").filter(line => line.trim())\n          };\n          newUserData.experience = [...(newUserData.experience || []), newUserData.currentExperience];\n          delete newUserData.currentExperience;\n          break;\n        case \"degree\":\n          newUserData.currentEducation = {\n            degree: input\n          };\n          break;\n        case \"university\":\n          newUserData.currentEducation = {\n            ...newUserData.currentEducation,\n            university: input\n          };\n          break;\n        case \"educationLocation\":\n          newUserData.currentEducation = {\n            ...newUserData.currentEducation,\n            location: input\n          };\n          break;\n        case \"educationStartDate\":\n          newUserData.currentEducation = {\n            ...newUserData.currentEducation,\n            startDate: input\n          };\n          break;\n        case \"educationEndDate\":\n          newUserData.currentEducation = {\n            ...newUserData.currentEducation,\n            endDate: input\n          };\n          break;\n        case \"educationScore\":\n          newUserData.currentEducation = {\n            ...newUserData.currentEducation,\n            score: input\n          };\n          newUserData.education = [...(newUserData.education || []), newUserData.currentEducation];\n          delete newUserData.currentEducation;\n          break;\n        case \"projectTitle\":\n          newUserData.currentProject = {\n            title: input\n          };\n          break;\n        case \"projectTechnologies\":\n          newUserData.currentProject = {\n            ...newUserData.currentProject,\n            technologies: input.split(\",\").map(tech => tech.trim())\n          };\n          break;\n        case \"projectDescription\":\n          newUserData.currentProject = {\n            ...newUserData.currentProject,\n            description: input\n          };\n          break;\n        case \"projectUrl\":\n          newUserData.currentProject = {\n            ...newUserData.currentProject,\n            url: input\n          };\n          newUserData.projects = [...(newUserData.projects || []), newUserData.currentProject];\n          delete newUserData.currentProject;\n          break;\n        case \"certificateName\":\n          newUserData.currentCertification = {\n            name: input\n          };\n          break;\n        case \"certificateIssuer\":\n          newUserData.currentCertification = {\n            ...newUserData.currentCertification,\n            issuer: input\n          };\n          break;\n        case \"certificateDate\":\n          newUserData.currentCertification = {\n            ...newUserData.currentCertification,\n            date: input\n          };\n          newUserData.certifications = [...(newUserData.certifications || []), newUserData.currentCertification];\n          delete newUserData.currentCertification;\n          break;\n        case \"awardTitle\":\n          newUserData.currentAward = {\n            title: input\n          };\n          break;\n        case \"awardIssuer\":\n          newUserData.currentAward = {\n            ...newUserData.currentAward,\n            issuer: input\n          };\n          break;\n        case \"awardYear\":\n          newUserData.currentAward = {\n            ...newUserData.currentAward,\n            year: input\n          };\n          break;\n        case \"awardDescription\":\n          newUserData.currentAward = {\n            ...newUserData.currentAward,\n            description: input\n          };\n          newUserData.awards = [...(newUserData.awards || []), newUserData.currentAward];\n          delete newUserData.currentAward;\n          break;\n        case \"languageName\":\n          newUserData.currentLanguage = {\n            name: input\n          };\n          break;\n        case \"languageProficiency\":\n          newUserData.currentLanguage = {\n            ...newUserData.currentLanguage,\n            proficiency: input\n          };\n          newUserData.languages = [...(newUserData.languages || []), newUserData.currentLanguage];\n          delete newUserData.currentLanguage;\n          break;\n        default:\n          console.log(\"Unknown step:\", currentStep);\n          break;\n      }\n      setUserData(newUserData);\n\n      // Add bot response\n      setMessages(prev => [...prev, {\n        type: \"bot\",\n        text: data.nextQuestion\n      }]);\n\n      // Update step\n      if (data.isComplete) {\n        setIsComplete(true);\n        // Navigate to preview page with user data\n        navigate(\"/resume-preview\", {\n          state: {\n            resumeData: newUserData\n          }\n        });\n      } else {\n        // Handle yes/no responses for adding more items\n        if (input.toLowerCase() === \"yes\" || input.toLowerCase() === \"no\") {\n          switch (currentStep) {\n            case \"addMoreExperience\":\n              setCurrentStep(input.toLowerCase() === \"yes\" ? \"jobTitle\" : \"degree\");\n              break;\n            case \"addMoreEducation\":\n              setCurrentStep(input.toLowerCase() === \"yes\" ? \"degree\" : \"projectTitle\");\n              break;\n            case \"addMoreProject\":\n              setCurrentStep(input.toLowerCase() === \"yes\" ? \"projectTitle\" : \"certificateName\");\n              break;\n            case \"addMoreCertification\":\n              setCurrentStep(input.toLowerCase() === \"yes\" ? \"certificateName\" : \"awardTitle\");\n              break;\n            case \"addMoreAward\":\n              setCurrentStep(input.toLowerCase() === \"yes\" ? \"awardTitle\" : \"languageName\");\n              break;\n            case \"addMoreLanguage\":\n              setCurrentStep(input.toLowerCase() === \"yes\" ? \"languageName\" : \"complete\");\n              break;\n            default:\n              setCurrentStep(data.nextStep || currentStep);\n          }\n        } else {\n          // Handle regular steps\n          switch (currentStep) {\n            case \"name\":\n              setCurrentStep(\"email\");\n              break;\n            case \"email\":\n              setCurrentStep(\"phone\");\n              break;\n            case \"phone\":\n              setCurrentStep(\"location\");\n              break;\n            case \"location\":\n              setCurrentStep(\"linkedin\");\n              break;\n            case \"linkedin\":\n              setCurrentStep(\"portfolio\");\n              break;\n            case \"portfolio\":\n              setCurrentStep(\"summary\");\n              break;\n            case \"summary\":\n              setCurrentStep(\"technicalSkills\");\n              break;\n            case \"technicalSkills\":\n              setCurrentStep(\"softSkills\");\n              break;\n            case \"softSkills\":\n              setCurrentStep(\"jobTitle\");\n              break;\n            case \"jobTitle\":\n              setCurrentStep(\"company\");\n              break;\n            case \"company\":\n              setCurrentStep(\"jobLocation\");\n              break;\n            case \"jobLocation\":\n              setCurrentStep(\"jobStartDate\");\n              break;\n            case \"jobStartDate\":\n              setCurrentStep(\"jobEndDate\");\n              break;\n            case \"jobEndDate\":\n              setCurrentStep(\"jobResponsibilities\");\n              break;\n            case \"jobResponsibilities\":\n              setCurrentStep(\"addMoreExperience\");\n              break;\n            case \"degree\":\n              setCurrentStep(\"university\");\n              break;\n            case \"university\":\n              setCurrentStep(\"educationLocation\");\n              break;\n            case \"educationLocation\":\n              setCurrentStep(\"educationStartDate\");\n              break;\n            case \"educationStartDate\":\n              setCurrentStep(\"educationEndDate\");\n              break;\n            case \"educationEndDate\":\n              setCurrentStep(\"educationScore\");\n              break;\n            case \"educationScore\":\n              setCurrentStep(\"addMoreEducation\");\n              break;\n            case \"projectTitle\":\n              setCurrentStep(\"projectTechnologies\");\n              break;\n            case \"projectTechnologies\":\n              setCurrentStep(\"projectDescription\");\n              break;\n            case \"projectDescription\":\n              setCurrentStep(\"projectUrl\");\n              break;\n            case \"projectUrl\":\n              setCurrentStep(\"addMoreProject\");\n              break;\n            case \"certificateName\":\n              setCurrentStep(\"certificateIssuer\");\n              break;\n            case \"certificateIssuer\":\n              setCurrentStep(\"certificateDate\");\n              break;\n            case \"certificateDate\":\n              setCurrentStep(\"addMoreCertification\");\n              break;\n            case \"awardTitle\":\n              setCurrentStep(\"awardIssuer\");\n              break;\n            case \"awardIssuer\":\n              setCurrentStep(\"awardYear\");\n              break;\n            case \"awardYear\":\n              setCurrentStep(\"awardDescription\");\n              break;\n            case \"awardDescription\":\n              setCurrentStep(\"addMoreAward\");\n              break;\n            case \"languageName\":\n              setCurrentStep(\"languageProficiency\");\n              break;\n            case \"languageProficiency\":\n              setCurrentStep(\"addMoreLanguage\");\n              break;\n            default:\n              setCurrentStep(data.nextStep || currentStep);\n          }\n        }\n      }\n      setInput(\"\");\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages(prev => [...prev, {\n        type: \"bot\",\n        text: \"Sorry, something went wrong. Please try again.\"\n      }]);\n    }\n  };\n  const handleGenerateResume = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/generate-resume\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      });\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = `${userData.personalInfo.name.replace(/\\s+/g, \"_\")}_Resume.pdf`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n\n        // Show ATS prompt after resume generation\n        setMessages(prev => [...prev, {\n          type: \"bot\",\n          text: \"Would you like to check how well your resume matches a specific job description? Paste the job description below.\"\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          type: \"bot\",\n          text: \"Sorry, there was an error generating your resume.\"\n        }]);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages(prev => [...prev, {\n        type: \"bot\",\n        text: \"Sorry, there was an error generating your resume.\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 7\n    }, this), isComplete ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"generate-button\",\n        onClick: handleGenerateResume,\n        children: \"Generate Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: handleInputChange,\n          placeholder: \"Type your answer...\",\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 513,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"PeYmjjok1fkucB9kaPiVJwlreB4=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","type","text","input","setInput","currentStep","setCurrentStep","isComplete","setIsComplete","userData","setUserData","messagesEndRef","navigate","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleInputChange","e","target","value","handleSubmit","preventDefault","trim","prev","response","fetch","method","headers","body","JSON","stringify","message","step","data","json","error","newUserData","personalInfo","name","email","phone","location","linkedin","portfolio","summary","skills","technical","split","map","skill","soft","currentExperience","title","company","startDate","endDate","responsibilities","filter","line","experience","currentEducation","degree","university","score","education","currentProject","technologies","tech","description","url","projects","currentCertification","issuer","date","certifications","currentAward","year","awards","currentLanguage","proficiency","languages","console","log","nextQuestion","state","resumeData","toLowerCase","nextStep","handleGenerateResume","ok","blob","window","URL","createObjectURL","a","document","createElement","href","download","replace","appendChild","click","revokeObjectURL","removeChild","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","onSubmit","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/princevishal/Desktop/Chatbot/client/src/components/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Chat.css\";\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([\n    {\n      type: \"bot\",\n      text: \"Hello! I'll help you create your ATS-friendly resume. What is your full name?\",\n    },\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [currentStep, setCurrentStep] = useState(\"name\");\n  const [isComplete, setIsComplete] = useState(false);\n  const [userData, setUserData] = useState({});\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Add user message\n    setMessages((prev) => [...prev, { type: \"user\", text: input }]);\n\n    try {\n      const response = await fetch(\"http://localhost:3001/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message: input,\n          step: currentStep,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.error) {\n        setMessages((prev) => [\n          ...prev,\n          {\n            type: \"bot\",\n            text: \"Sorry, something went wrong. Please try again.\",\n          },\n        ]);\n        return;\n      }\n\n      // Store user data\n      const newUserData = { ...userData };\n      switch (currentStep) {\n        case \"name\":\n          newUserData.personalInfo = {\n            ...newUserData.personalInfo,\n            name: input,\n          };\n          break;\n        case \"email\":\n          newUserData.personalInfo = {\n            ...newUserData.personalInfo,\n            email: input,\n          };\n          break;\n        case \"phone\":\n          newUserData.personalInfo = {\n            ...newUserData.personalInfo,\n            phone: input,\n          };\n          break;\n        case \"location\":\n          newUserData.personalInfo = {\n            ...newUserData.personalInfo,\n            location: input,\n          };\n          break;\n        case \"linkedin\":\n          newUserData.personalInfo = {\n            ...newUserData.personalInfo,\n            linkedin: input,\n          };\n          break;\n        case \"portfolio\":\n          newUserData.personalInfo = {\n            ...newUserData.personalInfo,\n            portfolio: input,\n          };\n          break;\n        case \"summary\":\n          newUserData.summary = input;\n          break;\n        case \"technicalSkills\":\n          newUserData.skills = {\n            ...newUserData.skills,\n            technical: input.split(\",\").map((skill) => skill.trim()),\n          };\n          break;\n        case \"softSkills\":\n          newUserData.skills = {\n            ...newUserData.skills,\n            soft: input.split(\",\").map((skill) => skill.trim()),\n          };\n          break;\n        case \"jobTitle\":\n          newUserData.currentExperience = { title: input };\n          break;\n        case \"company\":\n          newUserData.currentExperience = {\n            ...newUserData.currentExperience,\n            company: input,\n          };\n          break;\n        case \"jobLocation\":\n          newUserData.currentExperience = {\n            ...newUserData.currentExperience,\n            location: input,\n          };\n          break;\n        case \"jobStartDate\":\n          newUserData.currentExperience = {\n            ...newUserData.currentExperience,\n            startDate: input,\n          };\n          break;\n        case \"jobEndDate\":\n          newUserData.currentExperience = {\n            ...newUserData.currentExperience,\n            endDate: input,\n          };\n          break;\n        case \"jobResponsibilities\":\n          newUserData.currentExperience = {\n            ...newUserData.currentExperience,\n            responsibilities: input.split(\"\\n\").filter((line) => line.trim()),\n          };\n          newUserData.experience = [\n            ...(newUserData.experience || []),\n            newUserData.currentExperience,\n          ];\n          delete newUserData.currentExperience;\n          break;\n        case \"degree\":\n          newUserData.currentEducation = { degree: input };\n          break;\n        case \"university\":\n          newUserData.currentEducation = {\n            ...newUserData.currentEducation,\n            university: input,\n          };\n          break;\n        case \"educationLocation\":\n          newUserData.currentEducation = {\n            ...newUserData.currentEducation,\n            location: input,\n          };\n          break;\n        case \"educationStartDate\":\n          newUserData.currentEducation = {\n            ...newUserData.currentEducation,\n            startDate: input,\n          };\n          break;\n        case \"educationEndDate\":\n          newUserData.currentEducation = {\n            ...newUserData.currentEducation,\n            endDate: input,\n          };\n          break;\n        case \"educationScore\":\n          newUserData.currentEducation = {\n            ...newUserData.currentEducation,\n            score: input,\n          };\n          newUserData.education = [\n            ...(newUserData.education || []),\n            newUserData.currentEducation,\n          ];\n          delete newUserData.currentEducation;\n          break;\n        case \"projectTitle\":\n          newUserData.currentProject = { title: input };\n          break;\n        case \"projectTechnologies\":\n          newUserData.currentProject = {\n            ...newUserData.currentProject,\n            technologies: input.split(\",\").map((tech) => tech.trim()),\n          };\n          break;\n        case \"projectDescription\":\n          newUserData.currentProject = {\n            ...newUserData.currentProject,\n            description: input,\n          };\n          break;\n        case \"projectUrl\":\n          newUserData.currentProject = {\n            ...newUserData.currentProject,\n            url: input,\n          };\n          newUserData.projects = [\n            ...(newUserData.projects || []),\n            newUserData.currentProject,\n          ];\n          delete newUserData.currentProject;\n          break;\n        case \"certificateName\":\n          newUserData.currentCertification = { name: input };\n          break;\n        case \"certificateIssuer\":\n          newUserData.currentCertification = {\n            ...newUserData.currentCertification,\n            issuer: input,\n          };\n          break;\n        case \"certificateDate\":\n          newUserData.currentCertification = {\n            ...newUserData.currentCertification,\n            date: input,\n          };\n          newUserData.certifications = [\n            ...(newUserData.certifications || []),\n            newUserData.currentCertification,\n          ];\n          delete newUserData.currentCertification;\n          break;\n        case \"awardTitle\":\n          newUserData.currentAward = { title: input };\n          break;\n        case \"awardIssuer\":\n          newUserData.currentAward = {\n            ...newUserData.currentAward,\n            issuer: input,\n          };\n          break;\n        case \"awardYear\":\n          newUserData.currentAward = {\n            ...newUserData.currentAward,\n            year: input,\n          };\n          break;\n        case \"awardDescription\":\n          newUserData.currentAward = {\n            ...newUserData.currentAward,\n            description: input,\n          };\n          newUserData.awards = [\n            ...(newUserData.awards || []),\n            newUserData.currentAward,\n          ];\n          delete newUserData.currentAward;\n          break;\n        case \"languageName\":\n          newUserData.currentLanguage = { name: input };\n          break;\n        case \"languageProficiency\":\n          newUserData.currentLanguage = {\n            ...newUserData.currentLanguage,\n            proficiency: input,\n          };\n          newUserData.languages = [\n            ...(newUserData.languages || []),\n            newUserData.currentLanguage,\n          ];\n          delete newUserData.currentLanguage;\n          break;\n        default:\n          console.log(\"Unknown step:\", currentStep);\n          break;\n      }\n      setUserData(newUserData);\n\n      // Add bot response\n      setMessages((prev) => [\n        ...prev,\n        { type: \"bot\", text: data.nextQuestion },\n      ]);\n\n      // Update step\n      if (data.isComplete) {\n        setIsComplete(true);\n        // Navigate to preview page with user data\n        navigate(\"/resume-preview\", { state: { resumeData: newUserData } });\n      } else {\n        // Handle yes/no responses for adding more items\n        if (input.toLowerCase() === \"yes\" || input.toLowerCase() === \"no\") {\n          switch (currentStep) {\n            case \"addMoreExperience\":\n              setCurrentStep(\n                input.toLowerCase() === \"yes\" ? \"jobTitle\" : \"degree\"\n              );\n              break;\n            case \"addMoreEducation\":\n              setCurrentStep(\n                input.toLowerCase() === \"yes\" ? \"degree\" : \"projectTitle\"\n              );\n              break;\n            case \"addMoreProject\":\n              setCurrentStep(\n                input.toLowerCase() === \"yes\"\n                  ? \"projectTitle\"\n                  : \"certificateName\"\n              );\n              break;\n            case \"addMoreCertification\":\n              setCurrentStep(\n                input.toLowerCase() === \"yes\" ? \"certificateName\" : \"awardTitle\"\n              );\n              break;\n            case \"addMoreAward\":\n              setCurrentStep(\n                input.toLowerCase() === \"yes\" ? \"awardTitle\" : \"languageName\"\n              );\n              break;\n            case \"addMoreLanguage\":\n              setCurrentStep(\n                input.toLowerCase() === \"yes\" ? \"languageName\" : \"complete\"\n              );\n              break;\n            default:\n              setCurrentStep(data.nextStep || currentStep);\n          }\n        } else {\n          // Handle regular steps\n          switch (currentStep) {\n            case \"name\":\n              setCurrentStep(\"email\");\n              break;\n            case \"email\":\n              setCurrentStep(\"phone\");\n              break;\n            case \"phone\":\n              setCurrentStep(\"location\");\n              break;\n            case \"location\":\n              setCurrentStep(\"linkedin\");\n              break;\n            case \"linkedin\":\n              setCurrentStep(\"portfolio\");\n              break;\n            case \"portfolio\":\n              setCurrentStep(\"summary\");\n              break;\n            case \"summary\":\n              setCurrentStep(\"technicalSkills\");\n              break;\n            case \"technicalSkills\":\n              setCurrentStep(\"softSkills\");\n              break;\n            case \"softSkills\":\n              setCurrentStep(\"jobTitle\");\n              break;\n            case \"jobTitle\":\n              setCurrentStep(\"company\");\n              break;\n            case \"company\":\n              setCurrentStep(\"jobLocation\");\n              break;\n            case \"jobLocation\":\n              setCurrentStep(\"jobStartDate\");\n              break;\n            case \"jobStartDate\":\n              setCurrentStep(\"jobEndDate\");\n              break;\n            case \"jobEndDate\":\n              setCurrentStep(\"jobResponsibilities\");\n              break;\n            case \"jobResponsibilities\":\n              setCurrentStep(\"addMoreExperience\");\n              break;\n            case \"degree\":\n              setCurrentStep(\"university\");\n              break;\n            case \"university\":\n              setCurrentStep(\"educationLocation\");\n              break;\n            case \"educationLocation\":\n              setCurrentStep(\"educationStartDate\");\n              break;\n            case \"educationStartDate\":\n              setCurrentStep(\"educationEndDate\");\n              break;\n            case \"educationEndDate\":\n              setCurrentStep(\"educationScore\");\n              break;\n            case \"educationScore\":\n              setCurrentStep(\"addMoreEducation\");\n              break;\n            case \"projectTitle\":\n              setCurrentStep(\"projectTechnologies\");\n              break;\n            case \"projectTechnologies\":\n              setCurrentStep(\"projectDescription\");\n              break;\n            case \"projectDescription\":\n              setCurrentStep(\"projectUrl\");\n              break;\n            case \"projectUrl\":\n              setCurrentStep(\"addMoreProject\");\n              break;\n            case \"certificateName\":\n              setCurrentStep(\"certificateIssuer\");\n              break;\n            case \"certificateIssuer\":\n              setCurrentStep(\"certificateDate\");\n              break;\n            case \"certificateDate\":\n              setCurrentStep(\"addMoreCertification\");\n              break;\n            case \"awardTitle\":\n              setCurrentStep(\"awardIssuer\");\n              break;\n            case \"awardIssuer\":\n              setCurrentStep(\"awardYear\");\n              break;\n            case \"awardYear\":\n              setCurrentStep(\"awardDescription\");\n              break;\n            case \"awardDescription\":\n              setCurrentStep(\"addMoreAward\");\n              break;\n            case \"languageName\":\n              setCurrentStep(\"languageProficiency\");\n              break;\n            case \"languageProficiency\":\n              setCurrentStep(\"addMoreLanguage\");\n              break;\n            default:\n              setCurrentStep(data.nextStep || currentStep);\n          }\n        }\n      }\n\n      setInput(\"\");\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages((prev) => [\n        ...prev,\n        { type: \"bot\", text: \"Sorry, something went wrong. Please try again.\" },\n      ]);\n    }\n  };\n\n  const handleGenerateResume = async () => {\n    try {\n      const response = await fetch(\n        \"http://localhost:3001/api/generate-resume\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(userData),\n        }\n      );\n\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = `${userData.personalInfo.name.replace(\n          /\\s+/g,\n          \"_\"\n        )}_Resume.pdf`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n\n        // Show ATS prompt after resume generation\n        setMessages((prev) => [\n          ...prev,\n          {\n            type: \"bot\",\n            text: \"Would you like to check how well your resume matches a specific job description? Paste the job description below.\",\n          },\n        ]);\n      } else {\n        setMessages((prev) => [\n          ...prev,\n          {\n            type: \"bot\",\n            text: \"Sorry, there was an error generating your resume.\",\n          },\n        ]);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages((prev) => [\n        ...prev,\n        {\n          type: \"bot\",\n          text: \"Sorry, there was an error generating your resume.\",\n        },\n      ]);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"messages\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.type}`}>\n            <div className=\"message-content\">{message.text}</div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      {isComplete ? (\n        <div className=\"button-container\">\n          <button className=\"generate-button\" onClick={handleGenerateResume}>\n            Generate Resume\n          </button>\n        </div>\n      ) : (\n        <form onSubmit={handleSubmit} className=\"input-form\">\n          <div className=\"input-container\">\n            <input\n              type=\"text\"\n              value={input}\n              onChange={handleInputChange}\n              placeholder=\"Type your answer...\"\n              className=\"chat-input\"\n            />\n          </div>\n          <button type=\"submit\" className=\"send-button\">\n            Send\n          </button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CACvC;IACEU,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE;EACR,CAAC,CACF,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAMoB,cAAc,GAAGnB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMoB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,MAAMmB,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAH,cAAc,CAACI,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACdoB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACd,QAAQ,CAAC,CAAC;EAEd,MAAMmB,iBAAiB,GAAIC,CAAC,IAAK;IAC/Bf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI,CAACpB,KAAK,CAACqB,IAAI,CAAC,CAAC,EAAE;;IAEnB;IACAxB,WAAW,CAAEyB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAExB,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEC;IAAM,CAAC,CAAC,CAAC;IAE/D,IAAI;MACF,MAAMuB,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,OAAO,EAAE9B,KAAK;UACd+B,IAAI,EAAE7B;QACR,CAAC;MACH,CAAC,CAAC;MAEF,MAAM8B,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,KAAK,EAAE;QACdrC,WAAW,CAAEyB,IAAI,IAAK,CACpB,GAAGA,IAAI,EACP;UACExB,IAAI,EAAE,KAAK;UACXC,IAAI,EAAE;QACR,CAAC,CACF,CAAC;QACF;MACF;;MAEA;MACA,MAAMoC,WAAW,GAAG;QAAE,GAAG7B;MAAS,CAAC;MACnC,QAAQJ,WAAW;QACjB,KAAK,MAAM;UACTiC,WAAW,CAACC,YAAY,GAAG;YACzB,GAAGD,WAAW,CAACC,YAAY;YAC3BC,IAAI,EAAErC;UACR,CAAC;UACD;QACF,KAAK,OAAO;UACVmC,WAAW,CAACC,YAAY,GAAG;YACzB,GAAGD,WAAW,CAACC,YAAY;YAC3BE,KAAK,EAAEtC;UACT,CAAC;UACD;QACF,KAAK,OAAO;UACVmC,WAAW,CAACC,YAAY,GAAG;YACzB,GAAGD,WAAW,CAACC,YAAY;YAC3BG,KAAK,EAAEvC;UACT,CAAC;UACD;QACF,KAAK,UAAU;UACbmC,WAAW,CAACC,YAAY,GAAG;YACzB,GAAGD,WAAW,CAACC,YAAY;YAC3BI,QAAQ,EAAExC;UACZ,CAAC;UACD;QACF,KAAK,UAAU;UACbmC,WAAW,CAACC,YAAY,GAAG;YACzB,GAAGD,WAAW,CAACC,YAAY;YAC3BK,QAAQ,EAAEzC;UACZ,CAAC;UACD;QACF,KAAK,WAAW;UACdmC,WAAW,CAACC,YAAY,GAAG;YACzB,GAAGD,WAAW,CAACC,YAAY;YAC3BM,SAAS,EAAE1C;UACb,CAAC;UACD;QACF,KAAK,SAAS;UACZmC,WAAW,CAACQ,OAAO,GAAG3C,KAAK;UAC3B;QACF,KAAK,iBAAiB;UACpBmC,WAAW,CAACS,MAAM,GAAG;YACnB,GAAGT,WAAW,CAACS,MAAM;YACrBC,SAAS,EAAE7C,KAAK,CAAC8C,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAAC3B,IAAI,CAAC,CAAC;UACzD,CAAC;UACD;QACF,KAAK,YAAY;UACfc,WAAW,CAACS,MAAM,GAAG;YACnB,GAAGT,WAAW,CAACS,MAAM;YACrBK,IAAI,EAAEjD,KAAK,CAAC8C,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAAC3B,IAAI,CAAC,CAAC;UACpD,CAAC;UACD;QACF,KAAK,UAAU;UACbc,WAAW,CAACe,iBAAiB,GAAG;YAAEC,KAAK,EAAEnD;UAAM,CAAC;UAChD;QACF,KAAK,SAAS;UACZmC,WAAW,CAACe,iBAAiB,GAAG;YAC9B,GAAGf,WAAW,CAACe,iBAAiB;YAChCE,OAAO,EAAEpD;UACX,CAAC;UACD;QACF,KAAK,aAAa;UAChBmC,WAAW,CAACe,iBAAiB,GAAG;YAC9B,GAAGf,WAAW,CAACe,iBAAiB;YAChCV,QAAQ,EAAExC;UACZ,CAAC;UACD;QACF,KAAK,cAAc;UACjBmC,WAAW,CAACe,iBAAiB,GAAG;YAC9B,GAAGf,WAAW,CAACe,iBAAiB;YAChCG,SAAS,EAAErD;UACb,CAAC;UACD;QACF,KAAK,YAAY;UACfmC,WAAW,CAACe,iBAAiB,GAAG;YAC9B,GAAGf,WAAW,CAACe,iBAAiB;YAChCI,OAAO,EAAEtD;UACX,CAAC;UACD;QACF,KAAK,qBAAqB;UACxBmC,WAAW,CAACe,iBAAiB,GAAG;YAC9B,GAAGf,WAAW,CAACe,iBAAiB;YAChCK,gBAAgB,EAAEvD,KAAK,CAAC8C,KAAK,CAAC,IAAI,CAAC,CAACU,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACpC,IAAI,CAAC,CAAC;UAClE,CAAC;UACDc,WAAW,CAACuB,UAAU,GAAG,CACvB,IAAIvB,WAAW,CAACuB,UAAU,IAAI,EAAE,CAAC,EACjCvB,WAAW,CAACe,iBAAiB,CAC9B;UACD,OAAOf,WAAW,CAACe,iBAAiB;UACpC;QACF,KAAK,QAAQ;UACXf,WAAW,CAACwB,gBAAgB,GAAG;YAAEC,MAAM,EAAE5D;UAAM,CAAC;UAChD;QACF,KAAK,YAAY;UACfmC,WAAW,CAACwB,gBAAgB,GAAG;YAC7B,GAAGxB,WAAW,CAACwB,gBAAgB;YAC/BE,UAAU,EAAE7D;UACd,CAAC;UACD;QACF,KAAK,mBAAmB;UACtBmC,WAAW,CAACwB,gBAAgB,GAAG;YAC7B,GAAGxB,WAAW,CAACwB,gBAAgB;YAC/BnB,QAAQ,EAAExC;UACZ,CAAC;UACD;QACF,KAAK,oBAAoB;UACvBmC,WAAW,CAACwB,gBAAgB,GAAG;YAC7B,GAAGxB,WAAW,CAACwB,gBAAgB;YAC/BN,SAAS,EAAErD;UACb,CAAC;UACD;QACF,KAAK,kBAAkB;UACrBmC,WAAW,CAACwB,gBAAgB,GAAG;YAC7B,GAAGxB,WAAW,CAACwB,gBAAgB;YAC/BL,OAAO,EAAEtD;UACX,CAAC;UACD;QACF,KAAK,gBAAgB;UACnBmC,WAAW,CAACwB,gBAAgB,GAAG;YAC7B,GAAGxB,WAAW,CAACwB,gBAAgB;YAC/BG,KAAK,EAAE9D;UACT,CAAC;UACDmC,WAAW,CAAC4B,SAAS,GAAG,CACtB,IAAI5B,WAAW,CAAC4B,SAAS,IAAI,EAAE,CAAC,EAChC5B,WAAW,CAACwB,gBAAgB,CAC7B;UACD,OAAOxB,WAAW,CAACwB,gBAAgB;UACnC;QACF,KAAK,cAAc;UACjBxB,WAAW,CAAC6B,cAAc,GAAG;YAAEb,KAAK,EAAEnD;UAAM,CAAC;UAC7C;QACF,KAAK,qBAAqB;UACxBmC,WAAW,CAAC6B,cAAc,GAAG;YAC3B,GAAG7B,WAAW,CAAC6B,cAAc;YAC7BC,YAAY,EAAEjE,KAAK,CAAC8C,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEmB,IAAI,IAAKA,IAAI,CAAC7C,IAAI,CAAC,CAAC;UAC1D,CAAC;UACD;QACF,KAAK,oBAAoB;UACvBc,WAAW,CAAC6B,cAAc,GAAG;YAC3B,GAAG7B,WAAW,CAAC6B,cAAc;YAC7BG,WAAW,EAAEnE;UACf,CAAC;UACD;QACF,KAAK,YAAY;UACfmC,WAAW,CAAC6B,cAAc,GAAG;YAC3B,GAAG7B,WAAW,CAAC6B,cAAc;YAC7BI,GAAG,EAAEpE;UACP,CAAC;UACDmC,WAAW,CAACkC,QAAQ,GAAG,CACrB,IAAIlC,WAAW,CAACkC,QAAQ,IAAI,EAAE,CAAC,EAC/BlC,WAAW,CAAC6B,cAAc,CAC3B;UACD,OAAO7B,WAAW,CAAC6B,cAAc;UACjC;QACF,KAAK,iBAAiB;UACpB7B,WAAW,CAACmC,oBAAoB,GAAG;YAAEjC,IAAI,EAAErC;UAAM,CAAC;UAClD;QACF,KAAK,mBAAmB;UACtBmC,WAAW,CAACmC,oBAAoB,GAAG;YACjC,GAAGnC,WAAW,CAACmC,oBAAoB;YACnCC,MAAM,EAAEvE;UACV,CAAC;UACD;QACF,KAAK,iBAAiB;UACpBmC,WAAW,CAACmC,oBAAoB,GAAG;YACjC,GAAGnC,WAAW,CAACmC,oBAAoB;YACnCE,IAAI,EAAExE;UACR,CAAC;UACDmC,WAAW,CAACsC,cAAc,GAAG,CAC3B,IAAItC,WAAW,CAACsC,cAAc,IAAI,EAAE,CAAC,EACrCtC,WAAW,CAACmC,oBAAoB,CACjC;UACD,OAAOnC,WAAW,CAACmC,oBAAoB;UACvC;QACF,KAAK,YAAY;UACfnC,WAAW,CAACuC,YAAY,GAAG;YAAEvB,KAAK,EAAEnD;UAAM,CAAC;UAC3C;QACF,KAAK,aAAa;UAChBmC,WAAW,CAACuC,YAAY,GAAG;YACzB,GAAGvC,WAAW,CAACuC,YAAY;YAC3BH,MAAM,EAAEvE;UACV,CAAC;UACD;QACF,KAAK,WAAW;UACdmC,WAAW,CAACuC,YAAY,GAAG;YACzB,GAAGvC,WAAW,CAACuC,YAAY;YAC3BC,IAAI,EAAE3E;UACR,CAAC;UACD;QACF,KAAK,kBAAkB;UACrBmC,WAAW,CAACuC,YAAY,GAAG;YACzB,GAAGvC,WAAW,CAACuC,YAAY;YAC3BP,WAAW,EAAEnE;UACf,CAAC;UACDmC,WAAW,CAACyC,MAAM,GAAG,CACnB,IAAIzC,WAAW,CAACyC,MAAM,IAAI,EAAE,CAAC,EAC7BzC,WAAW,CAACuC,YAAY,CACzB;UACD,OAAOvC,WAAW,CAACuC,YAAY;UAC/B;QACF,KAAK,cAAc;UACjBvC,WAAW,CAAC0C,eAAe,GAAG;YAAExC,IAAI,EAAErC;UAAM,CAAC;UAC7C;QACF,KAAK,qBAAqB;UACxBmC,WAAW,CAAC0C,eAAe,GAAG;YAC5B,GAAG1C,WAAW,CAAC0C,eAAe;YAC9BC,WAAW,EAAE9E;UACf,CAAC;UACDmC,WAAW,CAAC4C,SAAS,GAAG,CACtB,IAAI5C,WAAW,CAAC4C,SAAS,IAAI,EAAE,CAAC,EAChC5C,WAAW,CAAC0C,eAAe,CAC5B;UACD,OAAO1C,WAAW,CAAC0C,eAAe;UAClC;QACF;UACEG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE/E,WAAW,CAAC;UACzC;MACJ;MACAK,WAAW,CAAC4B,WAAW,CAAC;;MAExB;MACAtC,WAAW,CAAEyB,IAAI,IAAK,CACpB,GAAGA,IAAI,EACP;QAAExB,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAEiC,IAAI,CAACkD;MAAa,CAAC,CACzC,CAAC;;MAEF;MACA,IAAIlD,IAAI,CAAC5B,UAAU,EAAE;QACnBC,aAAa,CAAC,IAAI,CAAC;QACnB;QACAI,QAAQ,CAAC,iBAAiB,EAAE;UAAE0E,KAAK,EAAE;YAAEC,UAAU,EAAEjD;UAAY;QAAE,CAAC,CAAC;MACrE,CAAC,MAAM;QACL;QACA,IAAInC,KAAK,CAACqF,WAAW,CAAC,CAAC,KAAK,KAAK,IAAIrF,KAAK,CAACqF,WAAW,CAAC,CAAC,KAAK,IAAI,EAAE;UACjE,QAAQnF,WAAW;YACjB,KAAK,mBAAmB;cACtBC,cAAc,CACZH,KAAK,CAACqF,WAAW,CAAC,CAAC,KAAK,KAAK,GAAG,UAAU,GAAG,QAC/C,CAAC;cACD;YACF,KAAK,kBAAkB;cACrBlF,cAAc,CACZH,KAAK,CAACqF,WAAW,CAAC,CAAC,KAAK,KAAK,GAAG,QAAQ,GAAG,cAC7C,CAAC;cACD;YACF,KAAK,gBAAgB;cACnBlF,cAAc,CACZH,KAAK,CAACqF,WAAW,CAAC,CAAC,KAAK,KAAK,GACzB,cAAc,GACd,iBACN,CAAC;cACD;YACF,KAAK,sBAAsB;cACzBlF,cAAc,CACZH,KAAK,CAACqF,WAAW,CAAC,CAAC,KAAK,KAAK,GAAG,iBAAiB,GAAG,YACtD,CAAC;cACD;YACF,KAAK,cAAc;cACjBlF,cAAc,CACZH,KAAK,CAACqF,WAAW,CAAC,CAAC,KAAK,KAAK,GAAG,YAAY,GAAG,cACjD,CAAC;cACD;YACF,KAAK,iBAAiB;cACpBlF,cAAc,CACZH,KAAK,CAACqF,WAAW,CAAC,CAAC,KAAK,KAAK,GAAG,cAAc,GAAG,UACnD,CAAC;cACD;YACF;cACElF,cAAc,CAAC6B,IAAI,CAACsD,QAAQ,IAAIpF,WAAW,CAAC;UAChD;QACF,CAAC,MAAM;UACL;UACA,QAAQA,WAAW;YACjB,KAAK,MAAM;cACTC,cAAc,CAAC,OAAO,CAAC;cACvB;YACF,KAAK,OAAO;cACVA,cAAc,CAAC,OAAO,CAAC;cACvB;YACF,KAAK,OAAO;cACVA,cAAc,CAAC,UAAU,CAAC;cAC1B;YACF,KAAK,UAAU;cACbA,cAAc,CAAC,UAAU,CAAC;cAC1B;YACF,KAAK,UAAU;cACbA,cAAc,CAAC,WAAW,CAAC;cAC3B;YACF,KAAK,WAAW;cACdA,cAAc,CAAC,SAAS,CAAC;cACzB;YACF,KAAK,SAAS;cACZA,cAAc,CAAC,iBAAiB,CAAC;cACjC;YACF,KAAK,iBAAiB;cACpBA,cAAc,CAAC,YAAY,CAAC;cAC5B;YACF,KAAK,YAAY;cACfA,cAAc,CAAC,UAAU,CAAC;cAC1B;YACF,KAAK,UAAU;cACbA,cAAc,CAAC,SAAS,CAAC;cACzB;YACF,KAAK,SAAS;cACZA,cAAc,CAAC,aAAa,CAAC;cAC7B;YACF,KAAK,aAAa;cAChBA,cAAc,CAAC,cAAc,CAAC;cAC9B;YACF,KAAK,cAAc;cACjBA,cAAc,CAAC,YAAY,CAAC;cAC5B;YACF,KAAK,YAAY;cACfA,cAAc,CAAC,qBAAqB,CAAC;cACrC;YACF,KAAK,qBAAqB;cACxBA,cAAc,CAAC,mBAAmB,CAAC;cACnC;YACF,KAAK,QAAQ;cACXA,cAAc,CAAC,YAAY,CAAC;cAC5B;YACF,KAAK,YAAY;cACfA,cAAc,CAAC,mBAAmB,CAAC;cACnC;YACF,KAAK,mBAAmB;cACtBA,cAAc,CAAC,oBAAoB,CAAC;cACpC;YACF,KAAK,oBAAoB;cACvBA,cAAc,CAAC,kBAAkB,CAAC;cAClC;YACF,KAAK,kBAAkB;cACrBA,cAAc,CAAC,gBAAgB,CAAC;cAChC;YACF,KAAK,gBAAgB;cACnBA,cAAc,CAAC,kBAAkB,CAAC;cAClC;YACF,KAAK,cAAc;cACjBA,cAAc,CAAC,qBAAqB,CAAC;cACrC;YACF,KAAK,qBAAqB;cACxBA,cAAc,CAAC,oBAAoB,CAAC;cACpC;YACF,KAAK,oBAAoB;cACvBA,cAAc,CAAC,YAAY,CAAC;cAC5B;YACF,KAAK,YAAY;cACfA,cAAc,CAAC,gBAAgB,CAAC;cAChC;YACF,KAAK,iBAAiB;cACpBA,cAAc,CAAC,mBAAmB,CAAC;cACnC;YACF,KAAK,mBAAmB;cACtBA,cAAc,CAAC,iBAAiB,CAAC;cACjC;YACF,KAAK,iBAAiB;cACpBA,cAAc,CAAC,sBAAsB,CAAC;cACtC;YACF,KAAK,YAAY;cACfA,cAAc,CAAC,aAAa,CAAC;cAC7B;YACF,KAAK,aAAa;cAChBA,cAAc,CAAC,WAAW,CAAC;cAC3B;YACF,KAAK,WAAW;cACdA,cAAc,CAAC,kBAAkB,CAAC;cAClC;YACF,KAAK,kBAAkB;cACrBA,cAAc,CAAC,cAAc,CAAC;cAC9B;YACF,KAAK,cAAc;cACjBA,cAAc,CAAC,qBAAqB,CAAC;cACrC;YACF,KAAK,qBAAqB;cACxBA,cAAc,CAAC,iBAAiB,CAAC;cACjC;YACF;cACEA,cAAc,CAAC6B,IAAI,CAACsD,QAAQ,IAAIpF,WAAW,CAAC;UAChD;QACF;MACF;MAEAD,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOiC,KAAK,EAAE;MACd8C,OAAO,CAAC9C,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BrC,WAAW,CAAEyB,IAAI,IAAK,CACpB,GAAGA,IAAI,EACP;QAAExB,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAE;MAAiD,CAAC,CACxE,CAAC;IACJ;EACF,CAAC;EAED,MAAMwF,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMhE,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2CAA2C,EAC3C;QACEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACvB,QAAQ;MAC/B,CACF,CAAC;MAED,IAAIiB,QAAQ,CAACiE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMlE,QAAQ,CAACkE,IAAI,CAAC,CAAC;QAClC,MAAMrB,GAAG,GAAGsB,MAAM,CAACC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC;QAC5C,MAAMI,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACrCF,CAAC,CAACG,IAAI,GAAG5B,GAAG;QACZyB,CAAC,CAACI,QAAQ,GAAG,GAAG3F,QAAQ,CAAC8B,YAAY,CAACC,IAAI,CAAC6D,OAAO,CAChD,MAAM,EACN,GACF,CAAC,aAAa;QACdJ,QAAQ,CAACnE,IAAI,CAACwE,WAAW,CAACN,CAAC,CAAC;QAC5BA,CAAC,CAACO,KAAK,CAAC,CAAC;QACTV,MAAM,CAACC,GAAG,CAACU,eAAe,CAACjC,GAAG,CAAC;QAC/B0B,QAAQ,CAACnE,IAAI,CAAC2E,WAAW,CAACT,CAAC,CAAC;;QAE5B;QACAhG,WAAW,CAAEyB,IAAI,IAAK,CACpB,GAAGA,IAAI,EACP;UACExB,IAAI,EAAE,KAAK;UACXC,IAAI,EAAE;QACR,CAAC,CACF,CAAC;MACJ,CAAC,MAAM;QACLF,WAAW,CAAEyB,IAAI,IAAK,CACpB,GAAGA,IAAI,EACP;UACExB,IAAI,EAAE,KAAK;UACXC,IAAI,EAAE;QACR,CAAC,CACF,CAAC;MACJ;IACF,CAAC,CAAC,OAAOmC,KAAK,EAAE;MACd8C,OAAO,CAAC9C,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BrC,WAAW,CAAEyB,IAAI,IAAK,CACpB,GAAGA,IAAI,EACP;QACExB,IAAI,EAAE,KAAK;QACXC,IAAI,EAAE;MACR,CAAC,CACF,CAAC;IACJ;EACF,CAAC;EAED,oBACEN,OAAA;IAAK8G,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B/G,OAAA;MAAK8G,SAAS,EAAC,UAAU;MAAAC,QAAA,GACtB5G,QAAQ,CAACmD,GAAG,CAAC,CAACjB,OAAO,EAAE2E,KAAK,kBAC3BhH,OAAA;QAAiB8G,SAAS,EAAE,WAAWzE,OAAO,CAAChC,IAAI,EAAG;QAAA0G,QAAA,eACpD/G,OAAA;UAAK8G,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAE1E,OAAO,CAAC/B;QAAI;UAAA2G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC,GAD7CJ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN,CAAC,eACFpH,OAAA;QAAKqH,GAAG,EAAEtG;MAAe;QAAAkG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,EACLzG,UAAU,gBACTX,OAAA;MAAK8G,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/B/G,OAAA;QAAQ8G,SAAS,EAAC,iBAAiB;QAACQ,OAAO,EAAExB,oBAAqB;QAAAiB,QAAA,EAAC;MAEnE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBAENpH,OAAA;MAAMuH,QAAQ,EAAE7F,YAAa;MAACoF,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAClD/G,OAAA;QAAK8G,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9B/G,OAAA;UACEK,IAAI,EAAC,MAAM;UACXoB,KAAK,EAAElB,KAAM;UACbiH,QAAQ,EAAElG,iBAAkB;UAC5BmG,WAAW,EAAC,qBAAqB;UACjCX,SAAS,EAAC;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNpH,OAAA;QAAQK,IAAI,EAAC,QAAQ;QAACyG,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAE9C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClH,EAAA,CA7hBID,IAAI;EAAA,QAYSH,WAAW;AAAA;AAAA4H,EAAA,GAZxBzH,IAAI;AA+hBV,eAAeA,IAAI;AAAC,IAAAyH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
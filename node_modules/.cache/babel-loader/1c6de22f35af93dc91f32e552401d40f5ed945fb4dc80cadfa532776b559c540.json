{"ast":null,"code":"var _jsxFileName = \"/Users/princevishal/Desktop/Chatbot copy/client/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SECTIONS = [{\n  id: \"personalInfo\",\n  title: \"Personal Information\"\n}, {\n  id: \"contact\",\n  title: \"Contact Details\"\n}, {\n  id: \"summary\",\n  title: \"Professional Summary\"\n}, {\n  id: \"skills\",\n  title: \"Skills\"\n}, {\n  id: \"experience\",\n  title: \"Work Experience\"\n}, {\n  id: \"education\",\n  title: \"Education\"\n}, {\n  id: \"certifications\",\n  title: \"Certifications\"\n}, {\n  id: \"languages\",\n  title: \"Languages\"\n}, {\n  id: \"projects\",\n  title: \"Projects\"\n}, {\n  id: \"awards\",\n  title: \"Awards\"\n}];\nconst Chat = () => {\n  _s();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([{\n    type: \"bot\",\n    content: \"Hi! Let's create your professional resume. What's your full name?\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [currentStep, setCurrentStep] = useState(\"name\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const [progress, setProgress] = useState(0);\n  const [currentSection, setCurrentSection] = useState(\"personalInfo\");\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const getCurrentSectionIndex = () => {\n    const stepToSection = {\n      name: \"personalInfo\",\n      title: \"personalInfo\",\n      email: \"contact\",\n      phone: \"contact\",\n      location: \"contact\",\n      linkedin: \"contact\",\n      summary: \"summary\",\n      skills: \"skills\",\n      experience: \"experience\",\n      education: \"education\",\n      certifications: \"certifications\",\n      languages: \"languages\",\n      projects: \"projects\",\n      awards: \"awards\"\n    };\n    return SECTIONS.findIndex(section => section.id === stepToSection[currentStep]);\n  };\n  const getSectionStatus = sectionId => {\n    const currentIndex = getCurrentSectionIndex();\n    const sectionIndex = SECTIONS.findIndex(section => section.id === sectionId);\n    if (sectionIndex < currentIndex) return \"completed\";\n    if (sectionIndex === currentIndex) return \"current\";\n    return \"pending\";\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setInput(\"\");\n    setMessages(prev => [...prev, {\n      type: \"user\",\n      content: userMessage\n    }]);\n    setIsTyping(true);\n    try {\n      const response = await fetch(\"http://localhost:3001/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: userMessage,\n          step: currentStep\n        })\n      });\n      const data = await response.json();\n      setIsTyping(false);\n      if (data.error) {\n        setMessages(prev => [...prev, {\n          type: \"bot\",\n          content: \"Sorry, something went wrong. Please try again.\"\n        }]);\n        return;\n      }\n      setMessages(prev => [...prev, {\n        type: \"bot\",\n        content: data.nextQuestion\n      }]);\n\n      // Update progress\n      const currentIndex = getCurrentSectionIndex();\n      setProgress((currentIndex + 1) / SECTIONS.length * 100);\n      if (data.isComplete) {\n        navigate(\"/select-template\", {\n          state: {\n            resumeData: data.resumeData\n          }\n        });\n      } else {\n        // Update current step based on the conversation flow\n        const stepMapping = {\n          name: \"title\",\n          title: \"email\",\n          email: \"phone\",\n          phone: \"location\",\n          location: \"linkedin\",\n          linkedin: \"summary\",\n          summary: \"skills\",\n          skills: \"experience\",\n          experience: data.nextQuestion.includes(\"education\") ? \"education\" : \"experience\",\n          education: data.nextQuestion.includes(\"certification\") ? \"certifications\" : \"education\",\n          certifications: data.nextQuestion.includes(\"language\") ? \"languages\" : \"certifications\",\n          languages: data.nextQuestion.includes(\"project\") ? \"projects\" : \"languages\",\n          projects: data.nextQuestion.includes(\"award\") ? \"awards\" : \"projects\",\n          awards: \"complete\"\n        };\n        setCurrentStep(stepMapping[currentStep]);\n\n        // Update current section\n        const stepToSection = {\n          name: \"personalInfo\",\n          title: \"personalInfo\",\n          email: \"contact\",\n          phone: \"contact\",\n          location: \"contact\",\n          linkedin: \"contact\",\n          summary: \"summary\",\n          skills: \"skills\",\n          experience: \"experience\",\n          education: \"education\",\n          certifications: \"certifications\",\n          languages: \"languages\",\n          projects: \"projects\",\n          awards: \"awards\"\n        };\n        setCurrentSection(stepToSection[stepMapping[currentStep]]);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setIsTyping(false);\n      setMessages(prev => [...prev, {\n        type: \"bot\",\n        content: \"Sorry, something went wrong. Please try again.\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Resume Builder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-text\",\n          children: [Math.round(progress), \"% Complete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.type}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Resume Sections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), SECTIONS.map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-icon ${getSectionStatus(section.id)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-text\",\n            children: section.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, section.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your response...\",\n        className: \"chat-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M5 12h14M12 5l7 7-7 7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"0+qJVB81TmX/ana/AUTq3JpU/mA=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","jsxDEV","_jsxDEV","SECTIONS","id","title","Chat","_s","navigate","messages","setMessages","type","content","input","setInput","currentStep","setCurrentStep","isTyping","setIsTyping","messagesEndRef","progress","setProgress","currentSection","setCurrentSection","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","getCurrentSectionIndex","stepToSection","name","email","phone","location","linkedin","summary","skills","experience","education","certifications","languages","projects","awards","findIndex","section","getSectionStatus","sectionId","currentIndex","sectionIndex","handleSubmit","e","preventDefault","trim","userMessage","prev","response","fetch","method","headers","body","JSON","stringify","message","step","data","json","error","nextQuestion","length","isComplete","state","resumeData","stepMapping","includes","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","Math","round","map","index","ref","onSubmit","value","onChange","target","placeholder","viewBox","d","_c","$RefreshReg$"],"sources":["/Users/princevishal/Desktop/Chatbot copy/client/src/components/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Chat.css\";\n\nconst SECTIONS = [\n  { id: \"personalInfo\", title: \"Personal Information\" },\n  { id: \"contact\", title: \"Contact Details\" },\n  { id: \"summary\", title: \"Professional Summary\" },\n  { id: \"skills\", title: \"Skills\" },\n  { id: \"experience\", title: \"Work Experience\" },\n  { id: \"education\", title: \"Education\" },\n  { id: \"certifications\", title: \"Certifications\" },\n  { id: \"languages\", title: \"Languages\" },\n  { id: \"projects\", title: \"Projects\" },\n  { id: \"awards\", title: \"Awards\" },\n];\n\nconst Chat = () => {\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([\n    {\n      type: \"bot\",\n      content: \"Hi! Let's create your professional resume. What's your full name?\",\n    },\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [currentStep, setCurrentStep] = useState(\"name\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const [progress, setProgress] = useState(0);\n  const [currentSection, setCurrentSection] = useState(\"personalInfo\");\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const getCurrentSectionIndex = () => {\n    const stepToSection = {\n      name: \"personalInfo\",\n      title: \"personalInfo\",\n      email: \"contact\",\n      phone: \"contact\",\n      location: \"contact\",\n      linkedin: \"contact\",\n      summary: \"summary\",\n      skills: \"skills\",\n      experience: \"experience\",\n      education: \"education\",\n      certifications: \"certifications\",\n      languages: \"languages\",\n      projects: \"projects\",\n      awards: \"awards\",\n    };\n    \n    return SECTIONS.findIndex(section => section.id === stepToSection[currentStep]);\n  };\n\n  const getSectionStatus = (sectionId) => {\n    const currentIndex = getCurrentSectionIndex();\n    const sectionIndex = SECTIONS.findIndex(section => section.id === sectionId);\n    \n    if (sectionIndex < currentIndex) return \"completed\";\n    if (sectionIndex === currentIndex) return \"current\";\n    return \"pending\";\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    const userMessage = input.trim();\n    setInput(\"\");\n    setMessages((prev) => [...prev, { type: \"user\", content: userMessage }]);\n    setIsTyping(true);\n\n    try {\n      const response = await fetch(\"http://localhost:3001/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message: userMessage,\n          step: currentStep,\n        }),\n      });\n\n      const data = await response.json();\n      setIsTyping(false);\n\n      if (data.error) {\n        setMessages((prev) => [\n          ...prev,\n          { type: \"bot\", content: \"Sorry, something went wrong. Please try again.\" },\n        ]);\n        return;\n      }\n\n      setMessages((prev) => [\n        ...prev,\n        { type: \"bot\", content: data.nextQuestion },\n      ]);\n\n      // Update progress\n      const currentIndex = getCurrentSectionIndex();\n      setProgress(((currentIndex + 1) / SECTIONS.length) * 100);\n\n      if (data.isComplete) {\n        navigate(\"/select-template\", { state: { resumeData: data.resumeData } });\n      } else {\n        // Update current step based on the conversation flow\n        const stepMapping = {\n          name: \"title\",\n          title: \"email\",\n          email: \"phone\",\n          phone: \"location\",\n          location: \"linkedin\",\n          linkedin: \"summary\",\n          summary: \"skills\",\n          skills: \"experience\",\n          experience: data.nextQuestion.includes(\"education\") ? \"education\" : \"experience\",\n          education: data.nextQuestion.includes(\"certification\") ? \"certifications\" : \"education\",\n          certifications: data.nextQuestion.includes(\"language\") ? \"languages\" : \"certifications\",\n          languages: data.nextQuestion.includes(\"project\") ? \"projects\" : \"languages\",\n          projects: data.nextQuestion.includes(\"award\") ? \"awards\" : \"projects\",\n          awards: \"complete\",\n        };\n        setCurrentStep(stepMapping[currentStep]);\n        \n        // Update current section\n        const stepToSection = {\n          name: \"personalInfo\",\n          title: \"personalInfo\",\n          email: \"contact\",\n          phone: \"contact\",\n          location: \"contact\",\n          linkedin: \"contact\",\n          summary: \"summary\",\n          skills: \"skills\",\n          experience: \"experience\",\n          education: \"education\",\n          certifications: \"certifications\",\n          languages: \"languages\",\n          projects: \"projects\",\n          awards: \"awards\",\n        };\n        setCurrentSection(stepToSection[stepMapping[currentStep]]);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setIsTyping(false);\n      setMessages((prev) => [\n        ...prev,\n        { type: \"bot\", content: \"Sorry, something went wrong. Please try again.\" },\n      ]);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <h1>Resume Builder</h1>\n        <div className=\"chat-progress\">\n          <div className=\"progress-bar\">\n            <div\n              className=\"progress-fill\"\n              style={{ width: `${progress}%` }}\n            ></div>\n          </div>\n          <span className=\"progress-text\">{Math.round(progress)}% Complete</span>\n        </div>\n      </div>\n\n      <div className=\"chat-main\">\n        <div className=\"chat-messages\">\n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.type}`}>\n              <div className=\"message-content\">{message.content}</div>\n            </div>\n          ))}\n          {isTyping && (\n            <div className=\"message bot\">\n              <div className=\"typing-indicator\">\n                <div className=\"typing-dot\"></div>\n                <div className=\"typing-dot\"></div>\n                <div className=\"typing-dot\"></div>\n              </div>\n            </div>\n          )}\n          <div ref={messagesEndRef} />\n        </div>\n\n        <div className=\"chat-sidebar\">\n          <h2 className=\"section-title\">Resume Sections</h2>\n          {SECTIONS.map((section) => (\n            <div key={section.id} className=\"section-status\">\n              <div className={`status-icon ${getSectionStatus(section.id)}`}></div>\n              <span className=\"status-text\">{section.title}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"chat-input-container\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type your response...\"\n          className=\"chat-input\"\n        />\n        <button type=\"submit\" className=\"send-button\">\n          <svg viewBox=\"0 0 24 24\">\n            <path d=\"M5 12h14M12 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
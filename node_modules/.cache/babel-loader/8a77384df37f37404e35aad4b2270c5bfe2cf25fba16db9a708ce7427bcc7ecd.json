{"ast":null,"code":"var _jsxFileName = \"/Users/princevishal/Desktop/Chatbot/client/src/components/ATSScore.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./ATSScore.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ATSScore = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    resumeData,\n    selectedTemplate\n  } = location.state || {};\n  const [atsScore, setAtsScore] = useState(null);\n  const [spellCheck, setSpellCheck] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [pdfUrl, setPdfUrl] = useState(null);\n  useEffect(() => {\n    if (!resumeData || !selectedTemplate) {\n      navigate(\"/\");\n      return;\n    }\n    const analyzeResume = async () => {\n      try {\n        // Generate PDF and get ATS score\n        const [pdfResponse, atsResponse, spellCheckResponse] = await Promise.all([axios.post(\"/api/generate-pdf\", {\n          resumeData,\n          template: selectedTemplate\n        }), axios.post(\"/api/score-resume\", {\n          resume: resumeData,\n          jobDescription: resumeData.jobDescription\n        }), axios.post(\"/api/spell-check\", {\n          text: JSON.stringify(resumeData)\n        })]);\n        setPdfUrl(pdfResponse.data.pdfUrl);\n        setAtsScore(atsResponse.data);\n        setSpellCheck(spellCheckResponse.data.corrections);\n      } catch (error) {\n        console.error(\"Error analyzing resume:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    analyzeResume();\n  }, [resumeData, selectedTemplate, navigate]);\n  const downloadPdf = () => {\n    if (pdfUrl) {\n      window.open(pdfUrl, \"_blank\");\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Analyzing your resume...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ats-score-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resume-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Resume Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), pdfUrl && /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: pdfUrl,\n        title: \"Resume Preview\",\n        className: \"pdf-preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadPdf,\n        className: \"download-btn\",\n        children: \"Download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ats-analysis\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"ATS Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), atsScore && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-circle\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"score\",\n              children: [atsScore.score, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Keyword Matches\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: atsScore.keywordMatches.map((match, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [match.keyword, \": \", match.found ? \"✅\" : \"❌\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Suggestions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: atsScore.suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: suggestion\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), spellCheck.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spell-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Spelling Suggestions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: spellCheck.map((correction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error\",\n              children: correction.original\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), \" \\u2192\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"suggestion\",\n              children: correction.suggestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ATSScore, \"zHJyATM6lz4Uzjtcr2gahYfIZDE=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ATSScore;\nexport default ATSScore;\nvar _c;\n$RefreshReg$(_c, \"ATSScore\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ATSScore","_s","location","navigate","resumeData","selectedTemplate","state","atsScore","setAtsScore","spellCheck","setSpellCheck","loading","setLoading","pdfUrl","setPdfUrl","analyzeResume","pdfResponse","atsResponse","spellCheckResponse","Promise","all","post","template","resume","jobDescription","text","JSON","stringify","data","corrections","error","console","downloadPdf","window","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","title","onClick","score","keywordMatches","map","match","index","keyword","found","suggestions","suggestion","length","correction","original","_c","$RefreshReg$"],"sources":["/Users/princevishal/Desktop/Chatbot/client/src/components/ATSScore.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./ATSScore.css\";\n\nconst ATSScore = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { resumeData, selectedTemplate } = location.state || {};\n\n  const [atsScore, setAtsScore] = useState(null);\n  const [spellCheck, setSpellCheck] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [pdfUrl, setPdfUrl] = useState(null);\n\n  useEffect(() => {\n    if (!resumeData || !selectedTemplate) {\n      navigate(\"/\");\n      return;\n    }\n\n    const analyzeResume = async () => {\n      try {\n        // Generate PDF and get ATS score\n        const [pdfResponse, atsResponse, spellCheckResponse] =\n          await Promise.all([\n            axios.post(\"/api/generate-pdf\", {\n              resumeData,\n              template: selectedTemplate,\n            }),\n            axios.post(\"/api/score-resume\", {\n              resume: resumeData,\n              jobDescription: resumeData.jobDescription,\n            }),\n            axios.post(\"/api/spell-check\", {\n              text: JSON.stringify(resumeData),\n            }),\n          ]);\n\n        setPdfUrl(pdfResponse.data.pdfUrl);\n        setAtsScore(atsResponse.data);\n        setSpellCheck(spellCheckResponse.data.corrections);\n      } catch (error) {\n        console.error(\"Error analyzing resume:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    analyzeResume();\n  }, [resumeData, selectedTemplate, navigate]);\n\n  const downloadPdf = () => {\n    if (pdfUrl) {\n      window.open(pdfUrl, \"_blank\");\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading\">\n        <div className=\"spinner\"></div>\n        <p>Analyzing your resume...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ats-score-container\">\n      <div className=\"resume-preview\">\n        <h2>Resume Preview</h2>\n        {pdfUrl && (\n          <iframe src={pdfUrl} title=\"Resume Preview\" className=\"pdf-preview\" />\n        )}\n        <button onClick={downloadPdf} className=\"download-btn\">\n          Download PDF\n        </button>\n      </div>\n\n      <div className=\"analysis-section\">\n        <div className=\"ats-analysis\">\n          <h2>ATS Analysis</h2>\n          {atsScore && (\n            <>\n              <div className=\"score-circle\">\n                <span className=\"score\">{atsScore.score}%</span>\n              </div>\n              <div className=\"score-details\">\n                <h3>Keyword Matches</h3>\n                <ul>\n                  {atsScore.keywordMatches.map((match, index) => (\n                    <li key={index}>\n                      {match.keyword}: {match.found ? \"✅\" : \"❌\"}\n                    </li>\n                  ))}\n                </ul>\n                <h3>Suggestions</h3>\n                <ul>\n                  {atsScore.suggestions.map((suggestion, index) => (\n                    <li key={index}>{suggestion}</li>\n                  ))}\n                </ul>\n              </div>\n            </>\n          )}\n        </div>\n\n        {spellCheck.length > 0 && (\n          <div className=\"spell-check\">\n            <h2>Spelling Suggestions</h2>\n            <ul>\n              {spellCheck.map((correction, index) => (\n                <li key={index}>\n                  <span className=\"error\">{correction.original}</span> →{\" \"}\n                  <span className=\"suggestion\">{correction.suggestion}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ATSScore;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
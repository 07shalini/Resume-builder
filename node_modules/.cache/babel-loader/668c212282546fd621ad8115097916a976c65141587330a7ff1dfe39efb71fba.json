{"ast":null,"code":"var _jsxFileName = \"/Users/princevishal/Desktop/Chatbot/client/src/components/TemplateSelection.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"./TemplateSelection.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst templates = [{\n  id: \"modern\",\n  name: \"Modern Template\",\n  thumbnail: \"/templates/modern-thumb.png\"\n}, {\n  id: \"professional\",\n  name: \"Professional Template\",\n  thumbnail: \"/templates/professional-thumb.png\"\n}, {\n  id: \"resume\",\n  name: \"Simple Template\",\n  thumbnail: \"/templates/resume-thumb.png\"\n}];\nconst TemplateSelection = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const resumeData = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.resumeData;\n  const handleTemplateSelect = async templateId => {\n    if (!resumeData) {\n      alert(\"No resume data found. Please fill in your details first.\");\n      navigate(\"/\");\n      return;\n    }\n\n    // Format the data according to the template structure\n    const formattedData = {\n      ...resumeData,\n      experience: Array.isArray(resumeData.experience) ? resumeData.experience : [{\n        company: \"Company\",\n        position: \"Position\",\n        startDate: \"Start Date\",\n        endDate: \"End Date\",\n        responsibilities: [resumeData.experience]\n      }],\n      education: Array.isArray(resumeData.education) ? resumeData.education : [{\n        school: \"School\",\n        degree: \"Degree\",\n        graduationYear: \"Graduation Year\"\n      }],\n      skills: Array.isArray(resumeData.skills) ? resumeData.skills : resumeData.skills.split(\",\").map(skill => skill.trim()),\n      skillCategories: [{\n        category: \"Technical Skills\",\n        skills: Array.isArray(resumeData.skills) ? resumeData.skills : resumeData.skills.split(\",\").map(skill => skill.trim())\n      }]\n    };\n    navigate(\"/ats-score\", {\n      state: {\n        resumeData: formattedData,\n        selectedTemplate: templateId\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"template-selection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Your Resume Template\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"templates-grid\",\n      children: templates.map(template => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template-card\",\n        onClick: () => handleTemplateSelect(template.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: template.thumbnail,\n          alt: template.name,\n          className: \"template-thumbnail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: template.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, template.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(TemplateSelection, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = TemplateSelection;\nexport default TemplateSelection;\nvar _c;\n$RefreshReg$(_c, \"TemplateSelection\");","map":{"version":3,"names":["React","useNavigate","useLocation","jsxDEV","_jsxDEV","templates","id","name","thumbnail","TemplateSelection","_s","_location$state","navigate","location","resumeData","state","handleTemplateSelect","templateId","alert","formattedData","experience","Array","isArray","company","position","startDate","endDate","responsibilities","education","school","degree","graduationYear","skills","split","map","skill","trim","skillCategories","category","selectedTemplate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","template","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/princevishal/Desktop/Chatbot/client/src/components/TemplateSelection.jsx"],"sourcesContent":["import React from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"./TemplateSelection.css\";\n\nconst templates = [\n  {\n    id: \"modern\",\n    name: \"Modern Template\",\n    thumbnail: \"/templates/modern-thumb.png\",\n  },\n  {\n    id: \"professional\",\n    name: \"Professional Template\",\n    thumbnail: \"/templates/professional-thumb.png\",\n  },\n  {\n    id: \"resume\",\n    name: \"Simple Template\",\n    thumbnail: \"/templates/resume-thumb.png\",\n  },\n];\n\nconst TemplateSelection = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const resumeData = location.state?.resumeData;\n\n  const handleTemplateSelect = async (templateId) => {\n    if (!resumeData) {\n      alert(\"No resume data found. Please fill in your details first.\");\n      navigate(\"/\");\n      return;\n    }\n\n    // Format the data according to the template structure\n    const formattedData = {\n      ...resumeData,\n      experience: Array.isArray(resumeData.experience) \n        ? resumeData.experience \n        : [{\n            company: \"Company\",\n            position: \"Position\",\n            startDate: \"Start Date\",\n            endDate: \"End Date\",\n            responsibilities: [resumeData.experience]\n          }],\n      education: Array.isArray(resumeData.education)\n        ? resumeData.education\n        : [{\n            school: \"School\",\n            degree: \"Degree\",\n            graduationYear: \"Graduation Year\"\n          }],\n      skills: Array.isArray(resumeData.skills) \n        ? resumeData.skills \n        : resumeData.skills.split(\",\").map(skill => skill.trim()),\n      skillCategories: [{\n        category: \"Technical Skills\",\n        skills: Array.isArray(resumeData.skills) \n          ? resumeData.skills \n          : resumeData.skills.split(\",\").map(skill => skill.trim())\n      }]\n    };\n\n    navigate(\"/ats-score\", {\n      state: {\n        resumeData: formattedData,\n        selectedTemplate: templateId,\n      },\n    });\n  };\n\n  return (\n    <div className=\"template-selection\">\n      <h2>Select Your Resume Template</h2>\n      <div className=\"templates-grid\">\n        {templates.map((template) => (\n          <div\n            key={template.id}\n            className=\"template-card\"\n            onClick={() => handleTemplateSelect(template.id)}\n          >\n            <img\n              src={template.thumbnail}\n              alt={template.name}\n              className=\"template-thumbnail\"\n            />\n            <h3>{template.name}</h3>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TemplateSelection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/princevishal/Desktop/Chatbot copy/client/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    type: \"bot\",\n    text: \"Hello! I'll help you create your professional resume. What is your full name?\",\n    timestamp: new Date().toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [currentStep, setCurrentStep] = useState(\"name\");\n  const [isComplete, setIsComplete] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [userData, setUserData] = useState({\n    personalInfo: {},\n    contact: {},\n    professionalSummary: \"\",\n    skills: [],\n    workExperience: [],\n    education: [],\n    certifications: [],\n    languages: [],\n    projects: [],\n    awards: []\n  });\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const simulateTyping = async response => {\n    setIsTyping(true);\n    // Simulate typing delay based on message length\n    await new Promise(resolve => setTimeout(resolve, Math.min(1000, response.length * 20)));\n    setIsTyping(false);\n    return response;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const timestamp = new Date().toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n\n    // Add user message\n    setMessages(prev => [...prev, {\n      type: \"user\",\n      text: input,\n      timestamp\n    }]);\n    setInput(\"\");\n    try {\n      const response = await fetch(\"http://localhost:3001/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input,\n          step: currentStep\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        const errorMessage = await simulateTyping(\"Sorry, something went wrong. Please try again.\");\n        setMessages(prev => [...prev, {\n          type: \"bot\",\n          text: errorMessage,\n          timestamp: new Date().toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }]);\n        return;\n      }\n\n      // Store user data\n      const newUserData = {\n        ...userData\n      };\n      switch (currentStep) {\n        case \"name\":\n          newUserData.personalInfo.fullName = input;\n          setCurrentStep(\"title\");\n          break;\n        case \"title\":\n          newUserData.personalInfo.title = input;\n          setCurrentStep(\"email\");\n          break;\n        case \"email\":\n          newUserData.contact.email = input;\n          setCurrentStep(\"phone\");\n          break;\n        case \"phone\":\n          newUserData.contact.phone = input;\n          setCurrentStep(\"location\");\n          break;\n        case \"location\":\n          newUserData.contact.location = input;\n          setCurrentStep(\"linkedin\");\n          break;\n        case \"linkedin\":\n          if (input.trim()) {\n            newUserData.contact.linkedin = input;\n          }\n          setCurrentStep(\"summary\");\n          break;\n        case \"summary\":\n          newUserData.professionalSummary = input;\n          setCurrentStep(\"skills\");\n          break;\n        case \"skills\":\n          newUserData.skills = input.split(\",\").map(skill => skill.trim());\n          setCurrentStep(\"experience\");\n          break;\n        case \"experience\":\n          if (input.toLowerCase() === \"done\") {\n            setCurrentStep(\"education\");\n          } else {\n            const [company, position, duration, responsibilities] = input.split(\"|\").map(item => item.trim());\n            newUserData.workExperience.push({\n              company,\n              position,\n              duration,\n              responsibilities\n            });\n          }\n          break;\n        case \"education\":\n          if (input.toLowerCase() === \"done\") {\n            setCurrentStep(\"certifications\");\n          } else {\n            const [degree, institution, year, gpa] = input.split(\"|\").map(item => item.trim());\n            newUserData.education.push({\n              degree,\n              institution,\n              year,\n              gpa: gpa || null\n            });\n          }\n          break;\n        case \"certifications\":\n          if (input.toLowerCase() === \"done\") {\n            setCurrentStep(\"languages\");\n          } else {\n            const [name, organization, year] = input.split(\"|\").map(item => item.trim());\n            newUserData.certifications.push({\n              name,\n              organization,\n              year\n            });\n          }\n          break;\n        case \"languages\":\n          if (input.toLowerCase() === \"done\") {\n            setCurrentStep(\"projects\");\n          } else {\n            const [language, proficiency] = input.split(\"-\").map(item => item.trim());\n            newUserData.languages.push({\n              language,\n              proficiency\n            });\n          }\n          break;\n        case \"projects\":\n          if (input.toLowerCase() === \"done\") {\n            setCurrentStep(\"awards\");\n          } else {\n            const [name, description, technologies] = input.split(\"|\").map(item => item.trim());\n            newUserData.projects.push({\n              name,\n              description,\n              technologies\n            });\n          }\n          break;\n        case \"awards\":\n          if (input.toLowerCase() === \"done\") {\n            setIsComplete(true);\n          } else {\n            const [name, organization, year] = input.split(\"|\").map(item => item.trim());\n            newUserData.awards.push({\n              name,\n              organization,\n              year\n            });\n          }\n          break;\n        default:\n          console.log(\"Unknown step:\", currentStep);\n          break;\n      }\n      setUserData(newUserData);\n\n      // Simulate typing for bot response\n      const botResponse = await simulateTyping(data.nextQuestion);\n\n      // Add bot response\n      setMessages(prev => [...prev, {\n        type: \"bot\",\n        text: botResponse,\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      }]);\n\n      // Handle completion\n      if (data.isComplete) {\n        setIsComplete(true);\n        // Navigate to template selection page with user data\n        navigate(\"/select-template\", {\n          state: {\n            resumeData: newUserData\n          }\n        });\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      const errorMessage = await simulateTyping(\"Sorry, there was an error. Please try again.\");\n      setMessages(prev => [...prev, {\n        type: \"bot\",\n        text: errorMessage,\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Resume Builder AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"AI Assistant Online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-timestamp\",\n          children: message.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange,\n        placeholder: \"Type your response...\",\n        disabled: isComplete || isTyping\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isComplete || isTyping || !input.trim(),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M22 2L11 13M22 2l-7 20-4-9-9-4 20-7z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"dFoZRzFjIp+PzfT2o0BcU6Nc+KQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","type","text","timestamp","Date","toLocaleTimeString","hour","minute","input","setInput","currentStep","setCurrentStep","isComplete","setIsComplete","isTyping","setIsTyping","userData","setUserData","personalInfo","contact","professionalSummary","skills","workExperience","education","certifications","languages","projects","awards","messagesEndRef","navigate","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleInputChange","e","target","value","simulateTyping","response","Promise","resolve","setTimeout","Math","min","length","handleSubmit","preventDefault","trim","prev","fetch","method","headers","body","JSON","stringify","message","step","data","json","error","errorMessage","newUserData","fullName","title","email","phone","location","linkedin","split","map","skill","toLowerCase","company","position","duration","responsibilities","item","push","degree","institution","year","gpa","name","organization","language","proficiency","description","technologies","console","log","botResponse","nextQuestion","state","resumeData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","ref","onSubmit","onChange","placeholder","disabled","viewBox","fill","stroke","strokeWidth","d","_c","$RefreshReg$"],"sources":["/Users/princevishal/Desktop/Chatbot copy/client/src/components/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Chat.css\";\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([\n    {\n      type: \"bot\",\n      text: \"Hello! I'll help you create your professional resume. What is your full name?\",\n      timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n    },\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [currentStep, setCurrentStep] = useState(\"name\");\n  const [isComplete, setIsComplete] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [userData, setUserData] = useState({\n    personalInfo: {},\n    contact: {},\n    professionalSummary: \"\",\n    skills: [],\n    workExperience: [],\n    education: [],\n    certifications: [],\n    languages: [],\n    projects: [],\n    awards: [],\n  });\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const simulateTyping = async (response) => {\n    setIsTyping(true);\n    // Simulate typing delay based on message length\n    await new Promise(resolve => setTimeout(resolve, Math.min(1000, response.length * 20)));\n    setIsTyping(false);\n    return response;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\n    // Add user message\n    setMessages((prev) => [...prev, { type: \"user\", text: input, timestamp }]);\n    setInput(\"\");\n\n    try {\n      const response = await fetch(\"http://localhost:3001/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message: input,\n          step: currentStep,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.error) {\n        const errorMessage = await simulateTyping(\"Sorry, something went wrong. Please try again.\");\n        setMessages((prev) => [\n          ...prev,\n          {\n            type: \"bot\",\n            text: errorMessage,\n            timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n          },\n        ]);\n        return;\n      }\n\n      // Store user data\n      const newUserData = { ...userData };\n      switch (currentStep) {\n        case \"name\":\n          newUserData.personalInfo.fullName = input;\n          setCurrentStep(\"title\");\n          break;\n        case \"title\":\n          newUserData.personalInfo.title = input;\n          setCurrentStep(\"email\");\n          break;\n        case \"email\":\n          newUserData.contact.email = input;\n          setCurrentStep(\"phone\");\n          break;\n        case \"phone\":\n          newUserData.contact.phone = input;\n          setCurrentStep(\"location\");\n          break;\n        case \"location\":\n          newUserData.contact.location = input;\n          setCurrentStep(\"linkedin\");\n          break;\n        case \"linkedin\":\n          if (input.trim()) {\n            newUserData.contact.linkedin = input;\n          }\n          setCurrentStep(\"summary\");\n          break;\n        case \"summary\":\n          newUserData.professionalSummary = input;\n          setCurrentStep(\"skills\");\n          break;\n        case \"skills\":\n          newUserData.skills = input.split(\",\").map((skill) => skill.trim());\n          setCurrentStep(\"experience\");\n          break;\n        case \"experience\":\n          if (input.toLowerCase() === \"done\") {\n            setCurrentStep(\"education\");\n          } else {\n            const [company, position, duration, responsibilities] = input\n              .split(\"|\")\n              .map((item) => item.trim());\n            newUserData.workExperience.push({\n              company,\n              position,\n              duration,\n              responsibilities,\n            });\n          }\n          break;\n        case \"education\":\n          if (input.toLowerCase() === \"done\") {\n            setCurrentStep(\"certifications\");\n          } else {\n            const [degree, institution, year, gpa] = input\n              .split(\"|\")\n              .map((item) => item.trim());\n            newUserData.education.push({\n              degree,\n              institution,\n              year,\n              gpa: gpa || null,\n            });\n          }\n          break;\n        case \"certifications\":\n          if (input.toLowerCase() === \"done\") {\n            setCurrentStep(\"languages\");\n          } else {\n            const [name, organization, year] = input\n              .split(\"|\")\n              .map((item) => item.trim());\n            newUserData.certifications.push({\n              name,\n              organization,\n              year,\n            });\n          }\n          break;\n        case \"languages\":\n          if (input.toLowerCase() === \"done\") {\n            setCurrentStep(\"projects\");\n          } else {\n            const [language, proficiency] = input\n              .split(\"-\")\n              .map((item) => item.trim());\n            newUserData.languages.push({\n              language,\n              proficiency,\n            });\n          }\n          break;\n        case \"projects\":\n          if (input.toLowerCase() === \"done\") {\n            setCurrentStep(\"awards\");\n          } else {\n            const [name, description, technologies] = input\n              .split(\"|\")\n              .map((item) => item.trim());\n            newUserData.projects.push({\n              name,\n              description,\n              technologies,\n            });\n          }\n          break;\n        case \"awards\":\n          if (input.toLowerCase() === \"done\") {\n            setIsComplete(true);\n          } else {\n            const [name, organization, year] = input\n              .split(\"|\")\n              .map((item) => item.trim());\n            newUserData.awards.push({\n              name,\n              organization,\n              year,\n            });\n          }\n          break;\n        default:\n          console.log(\"Unknown step:\", currentStep);\n          break;\n      }\n      setUserData(newUserData);\n\n      // Simulate typing for bot response\n      const botResponse = await simulateTyping(data.nextQuestion);\n      \n      // Add bot response\n      setMessages((prev) => [\n        ...prev,\n        { \n          type: \"bot\", \n          text: botResponse,\n          timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n        },\n      ]);\n\n      // Handle completion\n      if (data.isComplete) {\n        setIsComplete(true);\n        // Navigate to template selection page with user data\n        navigate(\"/select-template\", { state: { resumeData: newUserData } });\n      }\n\n    } catch (error) {\n      console.error(\"Error:\", error);\n      const errorMessage = await simulateTyping(\"Sorry, there was an error. Please try again.\");\n      setMessages((prev) => [\n        ...prev,\n        {\n          type: \"bot\",\n          text: errorMessage,\n          timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n        },\n      ]);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <h1>Resume Builder AI</h1>\n        <div className=\"chat-status\">\n          <div className=\"status-indicator\"></div>\n          <span>AI Assistant Online</span>\n        </div>\n      </div>\n      \n      <div className=\"messages\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.type}`}>\n            <div className=\"message-content\">{message.text}</div>\n            <div className=\"message-timestamp\">{message.timestamp}</div>\n          </div>\n        ))}\n        {isTyping && (\n          <div className=\"message bot\">\n            <div className=\"message-content\">\n              <div className=\"typing-indicator\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"input-form\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={handleInputChange}\n          placeholder=\"Type your response...\"\n          disabled={isComplete || isTyping}\n        />\n        <button type=\"submit\" disabled={isComplete || isTyping || !input.trim()}>\n          <span>Send</span>\n          <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n            <path d=\"M22 2L11 13M22 2l-7 20-4-9-9-4 20-7z\" />\n          </svg>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
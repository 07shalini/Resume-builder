{"ast":null,"code":"var _jsxFileName = \"/Users/princevishal/Desktop/Chatbot copy/client/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    type: \"bot\",\n    text: \"Hello! I'll help you create your resume. What is your full name?\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [currentStep, setCurrentStep] = useState(\"name\");\n  const [isComplete, setIsComplete] = useState(false);\n  const [userData, setUserData] = useState({\n    personalInfo: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      location: \"\",\n      linkedin: \"\",\n      portfolio: \"\",\n      summary: \"\"\n    },\n    skills: {\n      technical: [],\n      soft: [],\n      languages: []\n    },\n    experience: [],\n    education: [],\n    projects: [],\n    certifications: [],\n    awards: [],\n    volunteer: []\n  });\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Add user message\n    setMessages(prev => [...prev, {\n      type: \"user\",\n      text: input\n    }]);\n    try {\n      const response = await fetch(\"http://localhost:3001/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input,\n          step: currentStep\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        setMessages(prev => [...prev, {\n          type: \"bot\",\n          text: \"Sorry, something went wrong. Please try again.\"\n        }]);\n        return;\n      }\n\n      // Store user data\n      const newUserData = {\n        ...userData\n      };\n      switch (currentStep) {\n        case \"name\":\n          newUserData.personalInfo.name = input;\n          break;\n        case \"email\":\n          newUserData.personalInfo.email = input;\n          break;\n        case \"phone\":\n          newUserData.personalInfo.phone = input;\n          break;\n        case \"location\":\n          newUserData.personalInfo.location = input;\n          break;\n        case \"linkedin\":\n          if (input.toLowerCase() !== \"skip\") {\n            newUserData.personalInfo.linkedin = input;\n          }\n          break;\n        case \"portfolio\":\n          if (input.toLowerCase() !== \"skip\") {\n            newUserData.personalInfo.portfolio = input;\n          }\n          break;\n        case \"summary\":\n          newUserData.personalInfo.summary = input;\n          break;\n        case \"technical_skills\":\n          newUserData.skills.technical = input.split(\",\").map(skill => skill.trim());\n          break;\n        case \"soft_skills\":\n          newUserData.skills.soft = input.split(\",\").map(skill => skill.trim());\n          break;\n        case \"languages\":\n          newUserData.skills.languages = input.split(\",\").map(lang => lang.trim());\n          break;\n        case \"experience\":\n          if (input.toLowerCase() !== \"done\") {\n            newUserData.experience.push(input);\n          }\n          break;\n        case \"education\":\n          if (input.toLowerCase() !== \"done\") {\n            newUserData.education.push(input);\n          }\n          break;\n        case \"projects\":\n          if (input.toLowerCase() !== \"done\") {\n            newUserData.projects.push(input);\n          }\n          break;\n        case \"certifications\":\n          if (input.toLowerCase() !== \"done\") {\n            newUserData.certifications.push(input);\n          }\n          break;\n        case \"awards\":\n          if (input.toLowerCase() !== \"done\") {\n            newUserData.awards.push(input);\n          }\n          break;\n        case \"volunteer\":\n          if (input.toLowerCase() !== \"done\") {\n            newUserData.volunteer.push(input);\n          }\n          break;\n        default:\n          console.log(\"Unknown step:\", currentStep);\n          break;\n      }\n      setUserData(newUserData);\n\n      // Add bot response\n      setMessages(prev => [...prev, {\n        type: \"bot\",\n        text: data.nextQuestion\n      }]);\n\n      // Update step\n      if (data.isComplete) {\n        setIsComplete(true);\n        // Navigate to template selection page with user data\n        navigate(\"/select-template\", {\n          state: {\n            resumeData: newUserData\n          }\n        });\n      } else {\n        const steps = [\"name\", \"email\", \"phone\", \"location\", \"linkedin\", \"portfolio\", \"summary\", \"technical_skills\", \"soft_skills\", \"languages\", \"experience\", \"education\", \"projects\", \"certifications\", \"awards\", \"volunteer\"];\n        const currentIndex = steps.indexOf(currentStep);\n        if (input.toLowerCase() === \"done\") {\n          setCurrentStep(steps[currentIndex + 1]);\n        } else if (![\"experience\", \"education\", \"projects\", \"certifications\", \"awards\", \"volunteer\"].includes(currentStep)) {\n          setCurrentStep(steps[currentIndex + 1]);\n        }\n      }\n      setInput(\"\");\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages(prev => [...prev, {\n        type: \"bot\",\n        text: \"Sorry, there was an error. Please try again.\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      ref: messagesEndRef,\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: handleInputChange,\n          placeholder: \"Type your response...\",\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"mrw+Ih8AUir4RchVUN6rYJqHlZY=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","type","text","input","setInput","currentStep","setCurrentStep","isComplete","setIsComplete","userData","setUserData","personalInfo","name","email","phone","location","linkedin","portfolio","summary","skills","technical","soft","languages","experience","education","projects","certifications","awards","volunteer","messagesEndRef","navigate","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleInputChange","e","target","value","handleSubmit","preventDefault","trim","prev","response","fetch","method","headers","body","JSON","stringify","message","step","data","json","error","newUserData","toLowerCase","split","map","skill","lang","push","console","log","nextQuestion","state","resumeData","steps","currentIndex","indexOf","includes","className","children","ref","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/princevishal/Desktop/Chatbot copy/client/src/components/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Chat.css\";\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([\n    {\n      type: \"bot\",\n      text: \"Hello! I'll help you create your resume. What is your full name?\",\n    },\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [currentStep, setCurrentStep] = useState(\"name\");\n  const [isComplete, setIsComplete] = useState(false);\n  const [userData, setUserData] = useState({\n    personalInfo: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      location: \"\",\n      linkedin: \"\",\n      portfolio: \"\",\n      summary: \"\"\n    },\n    skills: {\n      technical: [],\n      soft: [],\n      languages: []\n    },\n    experience: [],\n    education: [],\n    projects: [],\n    certifications: [],\n    awards: [],\n    volunteer: []\n  });\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Add user message\n    setMessages((prev) => [...prev, { type: \"user\", text: input }]);\n\n    try {\n      const response = await fetch(\"http://localhost:3001/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message: input,\n          step: currentStep,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.error) {\n        setMessages((prev) => [\n          ...prev,\n          {\n            type: \"bot\",\n            text: \"Sorry, something went wrong. Please try again.\",\n          },\n        ]);\n        return;\n      }\n\n      // Store user data\n      const newUserData = { ...userData };\n      switch (currentStep) {\n        case \"name\":\n          newUserData.personalInfo.name = input;\n          break;\n        case \"email\":\n          newUserData.personalInfo.email = input;\n          break;\n        case \"phone\":\n          newUserData.personalInfo.phone = input;\n          break;\n        case \"location\":\n          newUserData.personalInfo.location = input;\n          break;\n        case \"linkedin\":\n          if (input.toLowerCase() !== \"skip\") {\n            newUserData.personalInfo.linkedin = input;\n          }\n          break;\n        case \"portfolio\":\n          if (input.toLowerCase() !== \"skip\") {\n            newUserData.personalInfo.portfolio = input;\n          }\n          break;\n        case \"summary\":\n          newUserData.personalInfo.summary = input;\n          break;\n        case \"technical_skills\":\n          newUserData.skills.technical = input.split(\",\").map(skill => skill.trim());\n          break;\n        case \"soft_skills\":\n          newUserData.skills.soft = input.split(\",\").map(skill => skill.trim());\n          break;\n        case \"languages\":\n          newUserData.skills.languages = input.split(\",\").map(lang => lang.trim());\n          break;\n        case \"experience\":\n          if (input.toLowerCase() !== \"done\") {\n            newUserData.experience.push(input);\n          }\n          break;\n        case \"education\":\n          if (input.toLowerCase() !== \"done\") {\n            newUserData.education.push(input);\n          }\n          break;\n        case \"projects\":\n          if (input.toLowerCase() !== \"done\") {\n            newUserData.projects.push(input);\n          }\n          break;\n        case \"certifications\":\n          if (input.toLowerCase() !== \"done\") {\n            newUserData.certifications.push(input);\n          }\n          break;\n        case \"awards\":\n          if (input.toLowerCase() !== \"done\") {\n            newUserData.awards.push(input);\n          }\n          break;\n        case \"volunteer\":\n          if (input.toLowerCase() !== \"done\") {\n            newUserData.volunteer.push(input);\n          }\n          break;\n        default:\n          console.log(\"Unknown step:\", currentStep);\n          break;\n      }\n      setUserData(newUserData);\n\n      // Add bot response\n      setMessages((prev) => [\n        ...prev,\n        { type: \"bot\", text: data.nextQuestion },\n      ]);\n\n      // Update step\n      if (data.isComplete) {\n        setIsComplete(true);\n        // Navigate to template selection page with user data\n        navigate(\"/select-template\", { state: { resumeData: newUserData } });\n      } else {\n        const steps = [\n          \"name\",\n          \"email\",\n          \"phone\",\n          \"location\",\n          \"linkedin\",\n          \"portfolio\",\n          \"summary\",\n          \"technical_skills\",\n          \"soft_skills\",\n          \"languages\",\n          \"experience\",\n          \"education\",\n          \"projects\",\n          \"certifications\",\n          \"awards\",\n          \"volunteer\"\n        ];\n        const currentIndex = steps.indexOf(currentStep);\n        if (input.toLowerCase() === \"done\") {\n          setCurrentStep(steps[currentIndex + 1]);\n        } else if (![\"experience\", \"education\", \"projects\", \"certifications\", \"awards\", \"volunteer\"].includes(currentStep)) {\n          setCurrentStep(steps[currentIndex + 1]);\n        }\n      }\n\n      setInput(\"\");\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages((prev) => [\n        ...prev,\n        {\n          type: \"bot\",\n          text: \"Sorry, there was an error. Please try again.\",\n        },\n      ]);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"messages\" ref={messagesEndRef}>\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.type}`}>\n            <div className=\"message-content\">{message.text}</div>\n          </div>\n        ))}\n      </div>\n      <form className=\"input-form\" onSubmit={handleSubmit}>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={handleInputChange}\n            placeholder=\"Type your response...\"\n            className=\"chat-input\"\n          />\n        </div>\n        <button type=\"submit\" className=\"send-button\">\n          Send\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
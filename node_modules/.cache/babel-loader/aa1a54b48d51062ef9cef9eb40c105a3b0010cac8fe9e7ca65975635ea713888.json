{"ast":null,"code":"// Simple dictionary of common words\nconst dictionary = new Set(['a', 'an', 'and', 'are', 'as', 'at', 'be', 'by', 'for', 'from', 'has', 'he', 'in', 'is', 'it', 'its', 'of', 'on', 'that', 'the', 'to', 'was', 'were', 'will', 'with', 'the', 'this', 'but', 'they', 'have', 'had', 'what', 'when', 'where', 'who', 'which', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'than', 'too', 'very', 'can', 'will', 'just', 'should', 'now', 'name', 'email', 'skills', 'experience', 'education', 'resume', 'job', 'work', 'company', 'position', 'role', 'responsibilities', 'achievements', 'projects', 'team', 'lead', 'manage', 'develop', 'create', 'implement', 'design', 'build', 'test', 'deploy', 'maintain', 'support', 'analyze', 'solve', 'improve', 'optimize', 'collaborate', 'communicate', 'present', 'document', 'train', 'mentor', 'coach', 'guide', 'help', 'assist', 'support', 'serve', 'provide', 'deliver', 'produce', 'generate', 'create', 'develop', 'design', 'build', 'implement', 'execute', 'perform', 'conduct', 'carry', 'out', 'complete', 'finish', 'achieve', 'accomplish', 'attain', 'reach', 'meet', 'exceed', 'surpass', 'outperform', 'excel', 'shine', 'stand', 'out', 'distinguish', 'differentiate', 'innovate', 'pioneer', 'lead', 'guide', 'direct', 'manage', 'supervise', 'oversee', 'coordinate', 'organize', 'plan', 'schedule', 'budget', 'forecast', 'estimate', 'calculate', 'measure', 'track', 'monitor', 'evaluate', 'assess', 'analyze', 'review', 'examine', 'investigate', 'research', 'study', 'learn', 'understand', 'comprehend', 'grasp', 'master', 'expert', 'specialist', 'professional', 'skilled', 'talented', 'gifted', 'proficient', 'competent', 'capable', 'able', 'qualified', 'certified', 'licensed', 'accredited', 'authorized', 'approved', 'validated', 'verified', 'confirmed', 'established', 'proven', 'demonstrated', 'shown', 'exhibited', 'displayed', 'presented', 'shared', 'communicated', 'conveyed', 'expressed', 'articulated', 'stated', 'declared', 'announced', 'reported', 'documented', 'recorded', 'logged', 'tracked', 'monitored', 'measured', 'evaluated', 'assessed', 'analyzed', 'reviewed', 'examined', 'investigated', 'researched', 'studied', 'learned', 'understood', 'comprehended', 'grasped', 'mastered']);\nexport const checkSpelling = text => {\n  if (!text) return {\n    hasErrors: false,\n    errors: []\n  };\n  const words = text.split(/\\s+/);\n  const errors = [];\n  words.forEach(word => {\n    // Remove punctuation and convert to lowercase for checking\n    const cleanWord = word.replace(/[.,/#!$%^&*;:{}=\\-_`~()]/g, \"\").toLowerCase();\n\n    // Skip empty strings, numbers, and words in dictionary\n    if (!cleanWord || /^\\d+$/.test(cleanWord) || dictionary.has(cleanWord)) return;\n\n    // Generate some simple suggestions\n    const suggestions = [cleanWord + 'ing', cleanWord + 'ed', cleanWord + 's', cleanWord.replace(/(.)\\1+/g, '$1'),\n    // Remove repeated letters\n    cleanWord.replace(/[aeiou]/g, 'a') // Replace vowels with 'a'\n    ].filter(s => s !== cleanWord);\n    errors.push({\n      word,\n      suggestions: suggestions.slice(0, 3) // Get top 3 suggestions\n    });\n  });\n  return {\n    hasErrors: errors.length > 0,\n    errors\n  };\n};\nexport const getHighlightedText = (text, errors) => {\n  if (!errors || errors.length === 0) return text;\n  let highlightedText = text;\n  errors.forEach(({\n    word\n  }) => {\n    const regex = new RegExp(`\\\\b${word}\\\\b`, \"gi\");\n    highlightedText = highlightedText.replace(regex, `<span class=\"spelling-error\" data-word=\"${word}\">${word}</span>`);\n  });\n  return highlightedText;\n};","map":{"version":3,"names":["dictionary","Set","checkSpelling","text","hasErrors","errors","words","split","forEach","word","cleanWord","replace","toLowerCase","test","has","suggestions","filter","s","push","slice","length","getHighlightedText","highlightedText","regex","RegExp"],"sources":["/Users/princevishal/Desktop/Chatbot/client/src/utils/spellChecker.js"],"sourcesContent":["// Simple dictionary of common words\nconst dictionary = new Set([\n  'a', 'an', 'and', 'are', 'as', 'at', 'be', 'by', 'for', 'from', 'has', 'he',\n  'in', 'is', 'it', 'its', 'of', 'on', 'that', 'the', 'to', 'was', 'were',\n  'will', 'with', 'the', 'this', 'but', 'they', 'have', 'had', 'what', 'when',\n  'where', 'who', 'which', 'why', 'how', 'all', 'any', 'both', 'each', 'few',\n  'more', 'most', 'other', 'some', 'such', 'than', 'too', 'very', 'can', 'will',\n  'just', 'should', 'now', 'name', 'email', 'skills', 'experience', 'education',\n  'resume', 'job', 'work', 'company', 'position', 'role', 'responsibilities',\n  'achievements', 'projects', 'team', 'lead', 'manage', 'develop', 'create',\n  'implement', 'design', 'build', 'test', 'deploy', 'maintain', 'support',\n  'analyze', 'solve', 'improve', 'optimize', 'collaborate', 'communicate',\n  'present', 'document', 'train', 'mentor', 'coach', 'guide', 'help', 'assist',\n  'support', 'serve', 'provide', 'deliver', 'produce', 'generate', 'create',\n  'develop', 'design', 'build', 'implement', 'execute', 'perform', 'conduct',\n  'carry', 'out', 'complete', 'finish', 'achieve', 'accomplish', 'attain',\n  'reach', 'meet', 'exceed', 'surpass', 'outperform', 'excel', 'shine', 'stand',\n  'out', 'distinguish', 'differentiate', 'innovate', 'pioneer', 'lead', 'guide',\n  'direct', 'manage', 'supervise', 'oversee', 'coordinate', 'organize', 'plan',\n  'schedule', 'budget', 'forecast', 'estimate', 'calculate', 'measure', 'track',\n  'monitor', 'evaluate', 'assess', 'analyze', 'review', 'examine', 'investigate',\n  'research', 'study', 'learn', 'understand', 'comprehend', 'grasp', 'master',\n  'expert', 'specialist', 'professional', 'skilled', 'talented', 'gifted',\n  'proficient', 'competent', 'capable', 'able', 'qualified', 'certified',\n  'licensed', 'accredited', 'authorized', 'approved', 'validated', 'verified',\n  'confirmed', 'established', 'proven', 'demonstrated', 'shown', 'exhibited',\n  'displayed', 'presented', 'shared', 'communicated', 'conveyed', 'expressed',\n  'articulated', 'stated', 'declared', 'announced', 'reported', 'documented',\n  'recorded', 'logged', 'tracked', 'monitored', 'measured', 'evaluated',\n  'assessed', 'analyzed', 'reviewed', 'examined', 'investigated', 'researched',\n  'studied', 'learned', 'understood', 'comprehended', 'grasped', 'mastered'\n]);\n\nexport const checkSpelling = (text) => {\n  if (!text) return { hasErrors: false, errors: [] };\n\n  const words = text.split(/\\s+/);\n  const errors = [];\n\n  words.forEach((word) => {\n    // Remove punctuation and convert to lowercase for checking\n    const cleanWord = word\n      .replace(/[.,/#!$%^&*;:{}=\\-_`~()]/g, \"\")\n      .toLowerCase();\n\n    // Skip empty strings, numbers, and words in dictionary\n    if (!cleanWord || /^\\d+$/.test(cleanWord) || dictionary.has(cleanWord)) return;\n\n    // Generate some simple suggestions\n    const suggestions = [\n      cleanWord + 'ing',\n      cleanWord + 'ed',\n      cleanWord + 's',\n      cleanWord.replace(/(.)\\1+/g, '$1'), // Remove repeated letters\n      cleanWord.replace(/[aeiou]/g, 'a'), // Replace vowels with 'a'\n    ].filter(s => s !== cleanWord);\n\n    errors.push({\n      word,\n      suggestions: suggestions.slice(0, 3), // Get top 3 suggestions\n    });\n  });\n\n  return {\n    hasErrors: errors.length > 0,\n    errors,\n  };\n};\n\nexport const getHighlightedText = (text, errors) => {\n  if (!errors || errors.length === 0) return text;\n\n  let highlightedText = text;\n  errors.forEach(({ word }) => {\n    const regex = new RegExp(`\\\\b${word}\\\\b`, \"gi\");\n    highlightedText = highlightedText.replace(\n      regex,\n      `<span class=\"spelling-error\" data-word=\"${word}\">${word}</span>`\n    );\n  });\n\n  return highlightedText;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}